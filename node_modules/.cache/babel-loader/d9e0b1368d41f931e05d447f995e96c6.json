{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\nimport { CREATE_ITEM_IN_USER_SUCCESS, CREATE_ITEM_IN_USER_FAIL, GET_USER_BY_ID_SUCCESS, GET_USER_BY_ID_FAIL, LOGEDDIN_USER_SUCCESS, LOGEDDIN_USER_FAIL, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, SET_POPUP, GET_COUNTRIES_FAIL, GET_COUNTRIES_SUCCESS, UPDATE_VERIFICATION_SUCCESS, UPDATE_VERIFICATION_FAIL, SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS, SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL, UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS, UPDATE_PASSWORD_SPECIFIC_USER_FAIL, SET_SHOW_GAME_ITEMS_SUCCESS, SET_DISPLAY_RFP_SUCCESS, CREATE_DATA_USER_SUCCESS, CREATE_DATA_USER_FAIL, SET_USERNAMEGAME, GET_GAME_ID_INFO_SUCCESS, GET_GAME_ID_INFO_FAIL, DELETE_GAME_ID_SUCCESS, DELETE_GAME_ID_FAIL, CREATE_TOURNAMENT_SUCCESS, CREATE_TOURNAMENT_FAIL, ACTIVE_TOURNAMENT_SUCCESS, ACTIVE_TOURNAMENT_FAIL, PREVIOUS_TOURNAMENT_FAIL, PREVIOUS_TOURNAMENT_SUCCESS, DELETE_TOURNAMENT_SUCCESS, DELETE_TOURNAMENT_FAIL, CREATE_REGISTER_GAME_SUCCESS, CREATE_REGISTER_GAME_FAIL, GET_REGISTER_USER_TOURNAMENT_SUCCESS, GET_REGISTER_USER_TOURNAMENT_FAIL, START_TOURNAMENT_SUCCESS, START_TOURNAMENT_FAIL, SET_START_TOURNAMENT, SET_REGISTER_TOURNAMENT, SET_CREATE_TOURNAMENT, GET_USER_INFO_SUCCESS, GET_USER_INFO_FAIL, UPDATE_USER_INFO_SUCCESS, UPDATE_USER_INFO_FAIL, SET_USER_SETTING, SET_GAME_ID_DELETED_TOURNAMENT, SET_USER_LOCATIN_TOURNAMENT, UPDATE_USER_LOCATION_SUCCESS, UPDATE_USER_LOCATIONO_FAIL, UPDATE_USER_PASSWORD_SUCCESS, UPDATE_USER_PASSWORD_FAIL, SET_USER_PASSWORD, GET_ALL_USER_FALCON_SUCCESS, GET_ALL_USER_FALCON_FAIL, SET_SWITCH_USERS, SET_PERSONAL_INFO, UPDATE_USERS_BY_ADMIN_SUCCESS, UPDATE_USERS_BY_ADMIN_FAIL, SET_EDIT_USER_SETTING, UPDATE_PASSWORD_BY_ADMIN_SUCCESS, UPDATE_PASSWORD_BY_ADMIN_FAIL, SET_EDIT_USER_PASS_SETTING, GET_TOURNAMENT_BY_ID_SUCCESS, GET_TOURNAMENT_BY_ID_FAIL, GET_RANK_POINT_TOURNAMENT_SUCCESS, GET_RANK_POINT_TOURNAMENT_FAIL, GET_PREVIOUS_TOURNAMENTS_SUCCESS, GET_PREVIOUS_TOURNAMENTS_FAIL, GET_OTHER_STATISTIC_SUCCESS, GET_OTHER_STATISTIC_FAIL, GET_FIFAUSERS_BY_TOURNAMENT_ID_FAIL, GET_FIFAUSERS_BY_TOURNAMENT_ID_SUCCESS, CREATE_TOURNAMENT_INFIFA_RESULTS_SUCCESS, CREATE_TOURNAMENT_INFIFA_RESULTS_FAIL, GET_FIFARESULTS_BY_TOURNAMENT_ID_FAIL, GET_FIFARESULTS_BY_TOURNAMENT_ID_SUCCESS, SET_GAME_ID_TAB, GET_ALL_TEAM_USERS_FAIL, GET_ALL_TEAM_USERS_SUCCESS, REGISTER_TOURNMENT_FOR_THIS_TEAM_SUCCESS, REGISTER_TOURNMENT_FOR_THIS_TEAM_FAIL, GET_USERS_OF_SPECIFIC_TEAM_FAIL, GET_USERS_OF_SPECIFIC_TEAM_SUCCESS, CONFIRM_TOURNMENT_BY_USER_SUCCESS, CONFIRM_TOURNMENT_BY_USER_FAIL, GET_ALL_TEAM_AND_MEMBERS_FAIL, GET_ALL_TEAM_AND_MEMBERS_SUCCESS } from \"./types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_ALL_TEAM_AND_MEMBERS_SUCCESS:\n      return { ...state,\n        getAllTeamAndMembersData: action.payload\n      };\n\n    case GET_ALL_TEAM_AND_MEMBERS_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case CONFIRM_TOURNMENT_BY_USER_SUCCESS:\n      return { ...state,\n        confirmTournmentByUserData: action.payload\n      };\n\n    case CONFIRM_TOURNMENT_BY_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_USERS_OF_SPECIFIC_TEAM_SUCCESS:\n      return { ...state,\n        usersOfSpecificTeamData: action.payload\n      };\n\n    case GET_USERS_OF_SPECIFIC_TEAM_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case REGISTER_TOURNMENT_FOR_THIS_TEAM_SUCCESS:\n      return { ...state,\n        registerForThisTeamData: action.payload\n      };\n\n    case REGISTER_TOURNMENT_FOR_THIS_TEAM_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_ALL_TEAM_USERS_SUCCESS:\n      return { ...state,\n        allTeamUserData: action.payload\n      };\n\n    case GET_ALL_TEAM_USERS_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_GAME_ID_TAB:\n      return { ...state,\n        gameIdTabData: action.payload\n      };\n\n    case GET_FIFARESULTS_BY_TOURNAMENT_ID_SUCCESS:\n      return { ...state,\n        fifaResultByTournamentIdData: action.payload\n      };\n\n    case GET_FIFARESULTS_BY_TOURNAMENT_ID_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case CREATE_TOURNAMENT_INFIFA_RESULTS_SUCCESS:\n      return { ...state,\n        createItemInFifaResultData: action.payload\n      };\n\n    case CREATE_TOURNAMENT_INFIFA_RESULTS_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_FIFAUSERS_BY_TOURNAMENT_ID_SUCCESS:\n      return { ...state,\n        fifaUsersByTournamentIdData: action.payload\n      };\n\n    case GET_FIFAUSERS_BY_TOURNAMENT_ID_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_OTHER_STATISTIC_SUCCESS:\n      return { ...state,\n        otherDataStatistic: action.payload\n      };\n\n    case GET_OTHER_STATISTIC_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_PREVIOUS_TOURNAMENTS_SUCCESS:\n      return { ...state,\n        perviousDataTournamentsUser: action.payload\n      };\n\n    case GET_PREVIOUS_TOURNAMENTS_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_RANK_POINT_TOURNAMENT_SUCCESS:\n      return { ...state,\n        rankAndPoinOfTournaments: action.payload\n      };\n\n    case GET_RANK_POINT_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_TOURNAMENT_BY_ID_SUCCESS:\n      return { ...state,\n        tournamentByIdData: action.payload\n      };\n\n    case GET_TOURNAMENT_BY_ID_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_PASSWORD_BY_ADMIN_SUCCESS:\n      return { ...state,\n        passwordEditByAdmin: action.payload\n      };\n\n    case UPDATE_PASSWORD_BY_ADMIN_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_EDIT_USER_PASS_SETTING:\n      return { ...state,\n        passwordEditByAdmin: action.payload\n      };\n\n    case UPDATE_USERS_BY_ADMIN_SUCCESS:\n      return { ...state,\n        usersEditByAdmin: action.payload\n      };\n\n    case UPDATE_USERS_BY_ADMIN_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_EDIT_USER_SETTING:\n      return { ...state,\n        usersEditByAdmin: action.payload\n      };\n\n    case SET_PERSONAL_INFO:\n      return { ...state,\n        personalInfoData: action.payload\n      };\n\n    case SET_SWITCH_USERS:\n      return { ...state,\n        switchBetweenUserAndPersonalInfo: action.payload\n      };\n\n    case GET_ALL_USER_FALCON_SUCCESS:\n      return { ...state,\n        allUserFalconData: action.payload\n      };\n\n    case GET_ALL_USER_FALCON_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_USER_PASSWORD_SUCCESS:\n      return { ...state,\n        updateUserPasswordData: action.payload\n      };\n\n    case UPDATE_USER_PASSWORD_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_USER_LOCATION_SUCCESS:\n      return { ...state,\n        updateUserLocationData: action.payload\n      };\n\n    case UPDATE_USER_LOCATIONO_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_USER_INFO_SUCCESS:\n      return { ...state,\n        updateUserData: action.payload\n      };\n\n    case UPDATE_USER_INFO_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_USER_INFO_SUCCESS:\n      return { ...state,\n        userInfoData: action.payload\n      };\n\n    case GET_USER_INFO_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_USER_PASSWORD:\n      return { ...state,\n        updateUserPasswordData: null\n      };\n\n    case SET_CREATE_TOURNAMENT:\n      return { ...state,\n        createTournamentData: null\n      };\n\n    case SET_USER_LOCATIN_TOURNAMENT:\n      return { ...state,\n        updateUserLocationData: null\n      };\n\n    case SET_GAME_ID_DELETED_TOURNAMENT:\n      return { ...state,\n        deleteGameIdData: null\n      };\n\n    case SET_USER_SETTING:\n      return { ...state,\n        updateUserData: null\n      };\n\n    case SET_REGISTER_TOURNAMENT:\n      return { ...state,\n        registerGameUserData: null\n      };\n\n    case SET_START_TOURNAMENT:\n      return { ...state,\n        startTournmentData: null\n      };\n\n    case START_TOURNAMENT_SUCCESS:\n      return { ...state,\n        startTournmentData: action.payload\n      };\n\n    case START_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_REGISTER_USER_TOURNAMENT_SUCCESS:\n      return { ...state,\n        registerForThisGameData: action.payload\n      };\n\n    case GET_REGISTER_USER_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case CREATE_REGISTER_GAME_SUCCESS:\n      return { ...state,\n        registerGameUserData: action.payload\n      };\n\n    case CREATE_REGISTER_GAME_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case DELETE_TOURNAMENT_SUCCESS:\n      return { ...state,\n        deletedTournamentData: action.payload\n      };\n\n    case DELETE_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case PREVIOUS_TOURNAMENT_SUCCESS:\n      return { ...state,\n        previousTournamentData: action.payload\n      };\n\n    case PREVIOUS_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case ACTIVE_TOURNAMENT_SUCCESS:\n      return { ...state,\n        activeTournamentData: action.payload\n      };\n\n    case ACTIVE_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case CREATE_TOURNAMENT_SUCCESS:\n      return { ...state,\n        createTournamentData: action.payload\n      };\n\n    case CREATE_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_USERNAMEGAME:\n      return { ...state,\n        usernameGameData: action.payload\n      };\n\n    case SET_SHOW_GAME_ITEMS_SUCCESS:\n      return { ...state,\n        ShowGameItem: action.payload\n      };\n\n    case DELETE_GAME_ID_SUCCESS:\n      return { ...state,\n        deleteGameIdData: action.payload\n      };\n\n    case DELETE_GAME_ID_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_GAME_ID_INFO_SUCCESS:\n      return { ...state,\n        gameIdInfoData: action.payload\n      };\n\n    case GET_GAME_ID_INFO_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_DISPLAY_RFP_SUCCESS:\n      return { ...state,\n        createOrUpdateSurveyData: action.payload\n      };\n\n    case CREATE_DATA_USER_SUCCESS:\n      return { ...state,\n        checkUserData: action.payload\n      };\n\n    case CREATE_DATA_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS:\n      return { ...state,\n        updatePasswordSpecificUserData: action.payload\n      };\n\n    case UPDATE_PASSWORD_SPECIFIC_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS:\n      return { ...state,\n        sendEmailForChangePasswordData: action.payload\n      };\n\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_VERIFICATION_SUCCESS:\n      return { ...state,\n        updateVerificationData: action.payload\n      };\n\n    case UPDATE_VERIFICATION_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_COUNTRIES_SUCCESS:\n      return { ...state,\n        countriesData: action.payload\n      };\n\n    case GET_COUNTRIES_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_POPUP:\n      return { ...state,\n        popupAlertData: action.payload,\n        createdItemInUserData: null\n      };\n\n    case LOGEDDIN_USER_SUCCESS:\n      return { ...state,\n        logedinUserData: action.payload\n      };\n\n    case LOGEDDIN_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case CREATE_ITEM_IN_USER_SUCCESS:\n      return { ...state,\n        createdItemInUserData: action.payload\n      };\n\n    case CREATE_ITEM_IN_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_USER_BY_ID_SUCCESS:\n      return { ...state,\n        userByIdData: action.payload\n      };\n\n    case GET_USER_BY_ID_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n    //authentication and authorization\n\n    case USER_LOADED:\n      localStorage.isAuthenticated = true;\n      localStorage.loading = false;\n      localStorage.user = JSON.stringify(action.payload);\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      //localStorage.setItem(`token`, `'` + action.payload.token + `'`);\n      localStorage.accessToken = action.payload.accessToken;\n      localStorage.refreshToken = action.payload.refreshToken;\n      localStorage.isAuthenticated = true;\n      localStorage.loading = false;\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false //token: action.payload.token,\n\n      };\n\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"refreshToken\");\n      localStorage.removeItem(\"isAuthenticated\");\n      localStorage.removeItem(\"loading\");\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"error\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        err: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        err: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["CREATE_ITEM_IN_USER_SUCCESS","CREATE_ITEM_IN_USER_FAIL","GET_USER_BY_ID_SUCCESS","GET_USER_BY_ID_FAIL","LOGEDDIN_USER_SUCCESS","LOGEDDIN_USER_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","SET_POPUP","GET_COUNTRIES_FAIL","GET_COUNTRIES_SUCCESS","UPDATE_VERIFICATION_SUCCESS","UPDATE_VERIFICATION_FAIL","SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS","SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL","UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS","UPDATE_PASSWORD_SPECIFIC_USER_FAIL","SET_SHOW_GAME_ITEMS_SUCCESS","SET_DISPLAY_RFP_SUCCESS","CREATE_DATA_USER_SUCCESS","CREATE_DATA_USER_FAIL","SET_USERNAMEGAME","GET_GAME_ID_INFO_SUCCESS","GET_GAME_ID_INFO_FAIL","DELETE_GAME_ID_SUCCESS","DELETE_GAME_ID_FAIL","CREATE_TOURNAMENT_SUCCESS","CREATE_TOURNAMENT_FAIL","ACTIVE_TOURNAMENT_SUCCESS","ACTIVE_TOURNAMENT_FAIL","PREVIOUS_TOURNAMENT_FAIL","PREVIOUS_TOURNAMENT_SUCCESS","DELETE_TOURNAMENT_SUCCESS","DELETE_TOURNAMENT_FAIL","CREATE_REGISTER_GAME_SUCCESS","CREATE_REGISTER_GAME_FAIL","GET_REGISTER_USER_TOURNAMENT_SUCCESS","GET_REGISTER_USER_TOURNAMENT_FAIL","START_TOURNAMENT_SUCCESS","START_TOURNAMENT_FAIL","SET_START_TOURNAMENT","SET_REGISTER_TOURNAMENT","SET_CREATE_TOURNAMENT","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAIL","UPDATE_USER_INFO_SUCCESS","UPDATE_USER_INFO_FAIL","SET_USER_SETTING","SET_GAME_ID_DELETED_TOURNAMENT","SET_USER_LOCATIN_TOURNAMENT","UPDATE_USER_LOCATION_SUCCESS","UPDATE_USER_LOCATIONO_FAIL","UPDATE_USER_PASSWORD_SUCCESS","UPDATE_USER_PASSWORD_FAIL","SET_USER_PASSWORD","GET_ALL_USER_FALCON_SUCCESS","GET_ALL_USER_FALCON_FAIL","SET_SWITCH_USERS","SET_PERSONAL_INFO","UPDATE_USERS_BY_ADMIN_SUCCESS","UPDATE_USERS_BY_ADMIN_FAIL","SET_EDIT_USER_SETTING","UPDATE_PASSWORD_BY_ADMIN_SUCCESS","UPDATE_PASSWORD_BY_ADMIN_FAIL","SET_EDIT_USER_PASS_SETTING","GET_TOURNAMENT_BY_ID_SUCCESS","GET_TOURNAMENT_BY_ID_FAIL","GET_RANK_POINT_TOURNAMENT_SUCCESS","GET_RANK_POINT_TOURNAMENT_FAIL","GET_PREVIOUS_TOURNAMENTS_SUCCESS","GET_PREVIOUS_TOURNAMENTS_FAIL","GET_OTHER_STATISTIC_SUCCESS","GET_OTHER_STATISTIC_FAIL","GET_FIFAUSERS_BY_TOURNAMENT_ID_FAIL","GET_FIFAUSERS_BY_TOURNAMENT_ID_SUCCESS","CREATE_TOURNAMENT_INFIFA_RESULTS_SUCCESS","CREATE_TOURNAMENT_INFIFA_RESULTS_FAIL","GET_FIFARESULTS_BY_TOURNAMENT_ID_FAIL","GET_FIFARESULTS_BY_TOURNAMENT_ID_SUCCESS","SET_GAME_ID_TAB","GET_ALL_TEAM_USERS_FAIL","GET_ALL_TEAM_USERS_SUCCESS","REGISTER_TOURNMENT_FOR_THIS_TEAM_SUCCESS","REGISTER_TOURNMENT_FOR_THIS_TEAM_FAIL","GET_USERS_OF_SPECIFIC_TEAM_FAIL","GET_USERS_OF_SPECIFIC_TEAM_SUCCESS","CONFIRM_TOURNMENT_BY_USER_SUCCESS","CONFIRM_TOURNMENT_BY_USER_FAIL","GET_ALL_TEAM_AND_MEMBERS_FAIL","GET_ALL_TEAM_AND_MEMBERS_SUCCESS","state","action","type","getAllTeamAndMembersData","payload","err","confirmTournmentByUserData","usersOfSpecificTeamData","registerForThisTeamData","allTeamUserData","gameIdTabData","fifaResultByTournamentIdData","createItemInFifaResultData","fifaUsersByTournamentIdData","otherDataStatistic","perviousDataTournamentsUser","rankAndPoinOfTournaments","tournamentByIdData","passwordEditByAdmin","usersEditByAdmin","personalInfoData","switchBetweenUserAndPersonalInfo","allUserFalconData","updateUserPasswordData","updateUserLocationData","updateUserData","userInfoData","createTournamentData","deleteGameIdData","registerGameUserData","startTournmentData","registerForThisGameData","deletedTournamentData","previousTournamentData","activeTournamentData","usernameGameData","ShowGameItem","gameIdInfoData","createOrUpdateSurveyData","checkUserData","updatePasswordSpecificUserData","sendEmailForChangePasswordData","updateVerificationData","countriesData","popupAlertData","createdItemInUserData","logedinUserData","userByIdData","localStorage","isAuthenticated","loading","user","JSON","stringify","accessToken","refreshToken","removeItem","token"],"sources":["/Users/samsamaei/Documents/Projects/falcon/src/Context/testReducer.js"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport {\r\n  CREATE_ITEM_IN_USER_SUCCESS,\r\n  CREATE_ITEM_IN_USER_FAIL,\r\n  GET_USER_BY_ID_SUCCESS,\r\n  GET_USER_BY_ID_FAIL,\r\n  LOGEDDIN_USER_SUCCESS,\r\n  LOGEDDIN_USER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  SET_POPUP,\r\n  GET_COUNTRIES_FAIL,\r\n  GET_COUNTRIES_SUCCESS,\r\n  UPDATE_VERIFICATION_SUCCESS,\r\n  UPDATE_VERIFICATION_FAIL,\r\n  SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS,\r\n  SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL,\r\n  UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS,\r\n  UPDATE_PASSWORD_SPECIFIC_USER_FAIL,\r\n  SET_SHOW_GAME_ITEMS_SUCCESS,\r\n  SET_DISPLAY_RFP_SUCCESS,\r\n  CREATE_DATA_USER_SUCCESS,\r\n  CREATE_DATA_USER_FAIL,\r\n  SET_USERNAMEGAME,\r\n  GET_GAME_ID_INFO_SUCCESS,\r\n  GET_GAME_ID_INFO_FAIL,\r\n  DELETE_GAME_ID_SUCCESS,\r\n  DELETE_GAME_ID_FAIL,\r\n  CREATE_TOURNAMENT_SUCCESS,\r\n  CREATE_TOURNAMENT_FAIL,\r\n  ACTIVE_TOURNAMENT_SUCCESS,\r\n  ACTIVE_TOURNAMENT_FAIL,\r\n  PREVIOUS_TOURNAMENT_FAIL,\r\n  PREVIOUS_TOURNAMENT_SUCCESS,\r\n  DELETE_TOURNAMENT_SUCCESS,\r\n  DELETE_TOURNAMENT_FAIL,\r\n  CREATE_REGISTER_GAME_SUCCESS,\r\n  CREATE_REGISTER_GAME_FAIL,\r\n  GET_REGISTER_USER_TOURNAMENT_SUCCESS,\r\n  GET_REGISTER_USER_TOURNAMENT_FAIL,\r\n  START_TOURNAMENT_SUCCESS,\r\n  START_TOURNAMENT_FAIL,\r\n  SET_START_TOURNAMENT,\r\n  SET_REGISTER_TOURNAMENT,\r\n  SET_CREATE_TOURNAMENT,\r\n  GET_USER_INFO_SUCCESS,\r\n  GET_USER_INFO_FAIL,\r\n  UPDATE_USER_INFO_SUCCESS,\r\n  UPDATE_USER_INFO_FAIL,\r\n  SET_USER_SETTING,\r\n  SET_GAME_ID_DELETED_TOURNAMENT,\r\n  SET_USER_LOCATIN_TOURNAMENT,\r\n  UPDATE_USER_LOCATION_SUCCESS,\r\n  UPDATE_USER_LOCATIONO_FAIL,\r\n  UPDATE_USER_PASSWORD_SUCCESS,\r\n  UPDATE_USER_PASSWORD_FAIL,\r\n  SET_USER_PASSWORD,\r\n  GET_ALL_USER_FALCON_SUCCESS,\r\n  GET_ALL_USER_FALCON_FAIL,\r\n  SET_SWITCH_USERS,\r\n  SET_PERSONAL_INFO,\r\n  UPDATE_USERS_BY_ADMIN_SUCCESS,\r\n  UPDATE_USERS_BY_ADMIN_FAIL,\r\n  SET_EDIT_USER_SETTING,\r\n  UPDATE_PASSWORD_BY_ADMIN_SUCCESS,\r\n  UPDATE_PASSWORD_BY_ADMIN_FAIL,\r\n  SET_EDIT_USER_PASS_SETTING,\r\n  GET_TOURNAMENT_BY_ID_SUCCESS,\r\n  GET_TOURNAMENT_BY_ID_FAIL,\r\n  GET_RANK_POINT_TOURNAMENT_SUCCESS,\r\n  GET_RANK_POINT_TOURNAMENT_FAIL,\r\n  GET_PREVIOUS_TOURNAMENTS_SUCCESS,\r\n  GET_PREVIOUS_TOURNAMENTS_FAIL,\r\n  GET_OTHER_STATISTIC_SUCCESS,\r\n  GET_OTHER_STATISTIC_FAIL,\r\n  GET_FIFAUSERS_BY_TOURNAMENT_ID_FAIL,\r\n  GET_FIFAUSERS_BY_TOURNAMENT_ID_SUCCESS,\r\n  CREATE_TOURNAMENT_INFIFA_RESULTS_SUCCESS,\r\n  CREATE_TOURNAMENT_INFIFA_RESULTS_FAIL,\r\n  GET_FIFARESULTS_BY_TOURNAMENT_ID_FAIL,\r\n  GET_FIFARESULTS_BY_TOURNAMENT_ID_SUCCESS,\r\n  SET_GAME_ID_TAB,\r\n  GET_ALL_TEAM_USERS_FAIL,\r\n  GET_ALL_TEAM_USERS_SUCCESS,\r\n  REGISTER_TOURNMENT_FOR_THIS_TEAM_SUCCESS,\r\n  REGISTER_TOURNMENT_FOR_THIS_TEAM_FAIL,\r\n  GET_USERS_OF_SPECIFIC_TEAM_FAIL,\r\n  GET_USERS_OF_SPECIFIC_TEAM_SUCCESS,\r\n  CONFIRM_TOURNMENT_BY_USER_SUCCESS,\r\n  CONFIRM_TOURNMENT_BY_USER_FAIL,\r\n  GET_ALL_TEAM_AND_MEMBERS_FAIL,\r\n  GET_ALL_TEAM_AND_MEMBERS_SUCCESS,\r\n\r\n} from \"./types\";\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case GET_ALL_TEAM_AND_MEMBERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        getAllTeamAndMembersData: action.payload,\r\n      };\r\n\r\n    case GET_ALL_TEAM_AND_MEMBERS_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case CONFIRM_TOURNMENT_BY_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        confirmTournmentByUserData: action.payload,\r\n      };\r\n\r\n    case CONFIRM_TOURNMENT_BY_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_USERS_OF_SPECIFIC_TEAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        usersOfSpecificTeamData: action.payload,\r\n      };\r\n\r\n    case GET_USERS_OF_SPECIFIC_TEAM_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case REGISTER_TOURNMENT_FOR_THIS_TEAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerForThisTeamData: action.payload,\r\n      };\r\n\r\n    case REGISTER_TOURNMENT_FOR_THIS_TEAM_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_ALL_TEAM_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allTeamUserData: action.payload,\r\n      };\r\n\r\n    case GET_ALL_TEAM_USERS_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case SET_GAME_ID_TAB:\r\n      return {\r\n        ...state,\r\n        gameIdTabData: action.payload,\r\n      };\r\n\r\n\r\n    case GET_FIFARESULTS_BY_TOURNAMENT_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fifaResultByTournamentIdData: action.payload,\r\n      };\r\n    case GET_FIFARESULTS_BY_TOURNAMENT_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n\r\n    case CREATE_TOURNAMENT_INFIFA_RESULTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createItemInFifaResultData: action.payload,\r\n      };\r\n    case CREATE_TOURNAMENT_INFIFA_RESULTS_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_FIFAUSERS_BY_TOURNAMENT_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fifaUsersByTournamentIdData: action.payload,\r\n      };\r\n    case GET_FIFAUSERS_BY_TOURNAMENT_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_OTHER_STATISTIC_SUCCESS:\r\n      return {\r\n        ...state,\r\n        otherDataStatistic: action.payload,\r\n      };\r\n    case GET_OTHER_STATISTIC_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case GET_PREVIOUS_TOURNAMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        perviousDataTournamentsUser: action.payload,\r\n      };\r\n    case GET_PREVIOUS_TOURNAMENTS_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case GET_RANK_POINT_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        rankAndPoinOfTournaments: action.payload,\r\n      };\r\n    case GET_RANK_POINT_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case GET_TOURNAMENT_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tournamentByIdData: action.payload,\r\n      };\r\n    case GET_TOURNAMENT_BY_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n\r\n    case UPDATE_PASSWORD_BY_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        passwordEditByAdmin: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_BY_ADMIN_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case SET_EDIT_USER_PASS_SETTING:\r\n      return {\r\n        ...state,\r\n        passwordEditByAdmin: action.payload,\r\n      };\r\n\r\n    case UPDATE_USERS_BY_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        usersEditByAdmin: action.payload,\r\n      };\r\n    case UPDATE_USERS_BY_ADMIN_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case SET_EDIT_USER_SETTING:\r\n      return {\r\n        ...state,\r\n        usersEditByAdmin: action.payload,\r\n      };\r\n\r\n    case SET_PERSONAL_INFO:\r\n      return {\r\n        ...state,\r\n        personalInfoData: action.payload,\r\n      };\r\n\r\n    case SET_SWITCH_USERS:\r\n      return {\r\n        ...state,\r\n        switchBetweenUserAndPersonalInfo: action.payload,\r\n      };\r\n\r\n    case GET_ALL_USER_FALCON_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allUserFalconData: action.payload,\r\n      };\r\n    case GET_ALL_USER_FALCON_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserPasswordData: action.payload,\r\n      };\r\n    case UPDATE_USER_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_LOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserLocationData: action.payload,\r\n      };\r\n    case UPDATE_USER_LOCATIONO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserData: action.payload,\r\n      };\r\n    case UPDATE_USER_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case GET_USER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userInfoData: action.payload,\r\n      };\r\n    case GET_USER_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case SET_USER_PASSWORD:\r\n      return {\r\n        ...state,\r\n        updateUserPasswordData: null,\r\n      };\r\n\r\n    case SET_CREATE_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        createTournamentData: null,\r\n      };\r\n\r\n    case SET_USER_LOCATIN_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        updateUserLocationData: null,\r\n      };\r\n\r\n    case SET_GAME_ID_DELETED_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        deleteGameIdData: null,\r\n      };\r\n\r\n    case SET_USER_SETTING:\r\n      return {\r\n        ...state,\r\n        updateUserData: null,\r\n      };\r\n\r\n    case SET_REGISTER_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        registerGameUserData: null,\r\n      };\r\n\r\n    case SET_START_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        startTournmentData: null,\r\n      };\r\n\r\n    case START_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        startTournmentData: action.payload,\r\n      };\r\n    case START_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case GET_REGISTER_USER_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerForThisGameData: action.payload,\r\n      };\r\n    case GET_REGISTER_USER_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case CREATE_REGISTER_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerGameUserData: action.payload,\r\n      };\r\n    case CREATE_REGISTER_GAME_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case DELETE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        deletedTournamentData: action.payload,\r\n      };\r\n    case DELETE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case PREVIOUS_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        previousTournamentData: action.payload,\r\n      };\r\n    case PREVIOUS_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case ACTIVE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        activeTournamentData: action.payload,\r\n      };\r\n    case ACTIVE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case CREATE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createTournamentData: action.payload,\r\n      };\r\n    case CREATE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_USERNAMEGAME:\r\n      return {\r\n        ...state,\r\n        usernameGameData: action.payload,\r\n      };\r\n    case SET_SHOW_GAME_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ShowGameItem: action.payload,\r\n      };\r\n    case DELETE_GAME_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        deleteGameIdData: action.payload,\r\n      };\r\n    case DELETE_GAME_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_GAME_ID_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        gameIdInfoData: action.payload,\r\n      };\r\n    case GET_GAME_ID_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_DISPLAY_RFP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createOrUpdateSurveyData: action.payload,\r\n      };\r\n\r\n    case CREATE_DATA_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        checkUserData: action.payload,\r\n      };\r\n    case CREATE_DATA_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updatePasswordSpecificUserData: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_SPECIFIC_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        sendEmailForChangePasswordData: action.payload,\r\n      };\r\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case UPDATE_VERIFICATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateVerificationData: action.payload,\r\n      };\r\n    case UPDATE_VERIFICATION_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_COUNTRIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        countriesData: action.payload,\r\n      };\r\n    case GET_COUNTRIES_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_POPUP:\r\n      return {\r\n        ...state,\r\n        popupAlertData: action.payload,\r\n        createdItemInUserData: null,\r\n      };\r\n    case LOGEDDIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logedinUserData: action.payload,\r\n      };\r\n    case LOGEDDIN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case CREATE_ITEM_IN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createdItemInUserData: action.payload,\r\n      };\r\n    case CREATE_ITEM_IN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_USER_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userByIdData: action.payload,\r\n      };\r\n    case GET_USER_BY_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    //authentication and authorization\r\n    case USER_LOADED:\r\n      localStorage.isAuthenticated = true;\r\n      localStorage.loading = false;\r\n      localStorage.user = JSON.stringify(action.payload);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      //localStorage.setItem(`token`, `'` + action.payload.token + `'`);\r\n      localStorage.accessToken = action.payload.accessToken;\r\n      localStorage.refreshToken = action.payload.refreshToken;\r\n      localStorage.isAuthenticated = true;\r\n      localStorage.loading = false;\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        //token: action.payload.token,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"accessToken\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n      localStorage.removeItem(\"isAuthenticated\");\r\n      localStorage.removeItem(\"loading\");\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"error\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        err: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        err: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}