{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\nimport { CREATE_ITEM_IN_USER_SUCCESS, CREATE_ITEM_IN_USER_FAIL, GET_USER_BY_ID_SUCCESS, GET_USER_BY_ID_FAIL, LOGEDDIN_USER_SUCCESS, LOGEDDIN_USER_FAIL, REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, SET_POPUP, GET_COUNTRIES_FAIL, GET_COUNTRIES_SUCCESS, UPDATE_VERIFICATION_SUCCESS, UPDATE_VERIFICATION_FAIL, SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS, SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL, UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS, UPDATE_PASSWORD_SPECIFIC_USER_FAIL, SET_SHOW_GAME_ITEMS_SUCCESS, SET_DISPLAY_RFP_SUCCESS, CREATE_DATA_USER_SUCCESS, CREATE_DATA_USER_FAIL, SET_USERNAMEGAME, GET_GAME_ID_INFO_SUCCESS, GET_GAME_ID_INFO_FAIL, DELETE_GAME_ID_SUCCESS, DELETE_GAME_ID_FAIL, CREATE_TOURNAMENT_SUCCESS, CREATE_TOURNAMENT_FAIL, ACTIVE_TOURNAMENT_SUCCESS, ACTIVE_TOURNAMENT_FAIL, PREVIOUS_TOURNAMENT_FAIL, PREVIOUS_TOURNAMENT_SUCCESS, DELETE_TOURNAMENT_SUCCESS, DELETE_TOURNAMENT_FAIL, CREATE_REGISTER_GAME_SUCCESS, CREATE_REGISTER_GAME_FAIL, GET_REGISTER_USER_TOURNAMENT_SUCCESS, GET_REGISTER_USER_TOURNAMENT_FAIL, START_TOURNAMENT_SUCCESS, START_TOURNAMENT_FAIL, SET_START_TOURNAMENT, SET_REGISTER_TOURNAMENT, SET_CREATE_TOURNAMENT, GET_USER_INFO_SUCCESS, GET_USER_INFO_FAIL, UPDATE_USER_INFO_SUCCESS, UPDATE_USER_INFO_FAIL, SET_USER_SETTING, SET_GAME_ID_DELETED_TOURNAMENT, SET_USER_LOCATIN_TOURNAMENT, UPDATE_USER_LOCATION_SUCCESS, UPDATE_USER_LOCATIONO_FAIL, UPDATE_USER_PASSWORD_SUCCESS, UPDATE_USER_PASSWORD_FAIL, SET_USER_PASSWORD, GET_ALL_USER_FALCON_SUCCESS, GET_ALL_USER_FALCON_FAIL, SET_SWITCH_USERS } from \"./types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case SET_SWITCH_USERS:\n      return { ...state,\n        switchBetweenUserAndPersonalInfo: action.payload\n      };\n\n    case GET_ALL_USER_FALCON_SUCCESS:\n      return { ...state,\n        allUserFalconData: action.payload\n      };\n\n    case GET_ALL_USER_FALCON_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_USER_PASSWORD_SUCCESS:\n      return { ...state,\n        updateUserPasswordData: action.payload\n      };\n\n    case UPDATE_USER_PASSWORD_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_USER_LOCATION_SUCCESS:\n      return { ...state,\n        updateUserLocationData: action.payload\n      };\n\n    case UPDATE_USER_LOCATIONO_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_USER_INFO_SUCCESS:\n      return { ...state,\n        updateUserData: action.payload\n      };\n\n    case UPDATE_USER_INFO_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_USER_INFO_SUCCESS:\n      return { ...state,\n        userInfoData: action.payload\n      };\n\n    case GET_USER_INFO_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_USER_PASSWORD:\n      return { ...state,\n        updateUserPasswordData: null\n      };\n\n    case SET_CREATE_TOURNAMENT:\n      return { ...state,\n        createTournamentData: null\n      };\n\n    case SET_USER_LOCATIN_TOURNAMENT:\n      return { ...state,\n        updateUserLocationData: null\n      };\n\n    case SET_GAME_ID_DELETED_TOURNAMENT:\n      return { ...state,\n        deleteGameIdData: null\n      };\n\n    case SET_USER_SETTING:\n      return { ...state,\n        updateUserData: null\n      };\n\n    case SET_REGISTER_TOURNAMENT:\n      return { ...state,\n        registerGameUserData: null\n      };\n\n    case SET_START_TOURNAMENT:\n      return { ...state,\n        startTournmentData: null\n      };\n\n    case START_TOURNAMENT_SUCCESS:\n      return { ...state,\n        startTournmentData: action.payload\n      };\n\n    case START_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_REGISTER_USER_TOURNAMENT_SUCCESS:\n      return { ...state,\n        registerForThisGameData: action.payload\n      };\n\n    case GET_REGISTER_USER_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case CREATE_REGISTER_GAME_SUCCESS:\n      return { ...state,\n        registerGameUserData: action.payload\n      };\n\n    case CREATE_REGISTER_GAME_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case DELETE_TOURNAMENT_SUCCESS:\n      return { ...state,\n        deletedTournamentData: action.payload\n      };\n\n    case DELETE_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case PREVIOUS_TOURNAMENT_SUCCESS:\n      return { ...state,\n        previousTournamentData: action.payload\n      };\n\n    case PREVIOUS_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case ACTIVE_TOURNAMENT_SUCCESS:\n      return { ...state,\n        activeTournamentData: action.payload\n      };\n\n    case ACTIVE_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case CREATE_TOURNAMENT_SUCCESS:\n      return { ...state,\n        createTournamentData: action.payload\n      };\n\n    case CREATE_TOURNAMENT_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_USERNAMEGAME:\n      return { ...state,\n        usernameGameData: action.payload\n      };\n\n    case SET_SHOW_GAME_ITEMS_SUCCESS:\n      return { ...state,\n        ShowGameItem: action.payload\n      };\n\n    case DELETE_GAME_ID_SUCCESS:\n      return { ...state,\n        deleteGameIdData: action.payload\n      };\n\n    case DELETE_GAME_ID_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_GAME_ID_INFO_SUCCESS:\n      return { ...state,\n        gameIdInfoData: action.payload\n      };\n\n    case GET_GAME_ID_INFO_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_DISPLAY_RFP_SUCCESS:\n      return { ...state,\n        createOrUpdateSurveyData: action.payload\n      };\n\n    case CREATE_DATA_USER_SUCCESS:\n      return { ...state,\n        checkUserData: action.payload\n      };\n\n    case CREATE_DATA_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS:\n      return { ...state,\n        updatePasswordSpecificUserData: action.payload\n      };\n\n    case UPDATE_PASSWORD_SPECIFIC_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS:\n      return { ...state,\n        sendEmailForChangePasswordData: action.payload\n      };\n\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case UPDATE_VERIFICATION_SUCCESS:\n      return { ...state,\n        updateVerificationData: action.payload\n      };\n\n    case UPDATE_VERIFICATION_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_COUNTRIES_SUCCESS:\n      return { ...state,\n        countriesData: action.payload\n      };\n\n    case GET_COUNTRIES_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case SET_POPUP:\n      return { ...state,\n        popupAlertData: action.payload,\n        createdItemInUserData: null\n      };\n\n    case LOGEDDIN_USER_SUCCESS:\n      return { ...state,\n        logedinUserData: action.payload\n      };\n\n    case LOGEDDIN_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case CREATE_ITEM_IN_USER_SUCCESS:\n      return { ...state,\n        createdItemInUserData: action.payload\n      };\n\n    case CREATE_ITEM_IN_USER_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n\n    case GET_USER_BY_ID_SUCCESS:\n      return { ...state,\n        userByIdData: action.payload\n      };\n\n    case GET_USER_BY_ID_FAIL:\n      return { ...state,\n        err: action.payload\n      };\n    //authentication and authorization\n\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(`token`, `'` + action.payload.token + `'`);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n        token: action.payload.token\n      };\n\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        err: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        err: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["CREATE_ITEM_IN_USER_SUCCESS","CREATE_ITEM_IN_USER_FAIL","GET_USER_BY_ID_SUCCESS","GET_USER_BY_ID_FAIL","LOGEDDIN_USER_SUCCESS","LOGEDDIN_USER_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","SET_POPUP","GET_COUNTRIES_FAIL","GET_COUNTRIES_SUCCESS","UPDATE_VERIFICATION_SUCCESS","UPDATE_VERIFICATION_FAIL","SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS","SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL","UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS","UPDATE_PASSWORD_SPECIFIC_USER_FAIL","SET_SHOW_GAME_ITEMS_SUCCESS","SET_DISPLAY_RFP_SUCCESS","CREATE_DATA_USER_SUCCESS","CREATE_DATA_USER_FAIL","SET_USERNAMEGAME","GET_GAME_ID_INFO_SUCCESS","GET_GAME_ID_INFO_FAIL","DELETE_GAME_ID_SUCCESS","DELETE_GAME_ID_FAIL","CREATE_TOURNAMENT_SUCCESS","CREATE_TOURNAMENT_FAIL","ACTIVE_TOURNAMENT_SUCCESS","ACTIVE_TOURNAMENT_FAIL","PREVIOUS_TOURNAMENT_FAIL","PREVIOUS_TOURNAMENT_SUCCESS","DELETE_TOURNAMENT_SUCCESS","DELETE_TOURNAMENT_FAIL","CREATE_REGISTER_GAME_SUCCESS","CREATE_REGISTER_GAME_FAIL","GET_REGISTER_USER_TOURNAMENT_SUCCESS","GET_REGISTER_USER_TOURNAMENT_FAIL","START_TOURNAMENT_SUCCESS","START_TOURNAMENT_FAIL","SET_START_TOURNAMENT","SET_REGISTER_TOURNAMENT","SET_CREATE_TOURNAMENT","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAIL","UPDATE_USER_INFO_SUCCESS","UPDATE_USER_INFO_FAIL","SET_USER_SETTING","SET_GAME_ID_DELETED_TOURNAMENT","SET_USER_LOCATIN_TOURNAMENT","UPDATE_USER_LOCATION_SUCCESS","UPDATE_USER_LOCATIONO_FAIL","UPDATE_USER_PASSWORD_SUCCESS","UPDATE_USER_PASSWORD_FAIL","SET_USER_PASSWORD","GET_ALL_USER_FALCON_SUCCESS","GET_ALL_USER_FALCON_FAIL","SET_SWITCH_USERS","state","action","type","switchBetweenUserAndPersonalInfo","payload","allUserFalconData","err","updateUserPasswordData","updateUserLocationData","updateUserData","userInfoData","createTournamentData","deleteGameIdData","registerGameUserData","startTournmentData","registerForThisGameData","deletedTournamentData","previousTournamentData","activeTournamentData","usernameGameData","ShowGameItem","gameIdInfoData","createOrUpdateSurveyData","checkUserData","updatePasswordSpecificUserData","sendEmailForChangePasswordData","updateVerificationData","countriesData","popupAlertData","createdItemInUserData","logedinUserData","userByIdData","isAuthenticated","loading","user","localStorage","setItem","token","removeItem"],"sources":["/Users/samsamaei/Documents/Projects/falcon/src/Context/testReducer.js"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport {\r\n  CREATE_ITEM_IN_USER_SUCCESS,\r\n  CREATE_ITEM_IN_USER_FAIL,\r\n  GET_USER_BY_ID_SUCCESS,\r\n  GET_USER_BY_ID_FAIL,\r\n  LOGEDDIN_USER_SUCCESS,\r\n  LOGEDDIN_USER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  SET_POPUP,\r\n  GET_COUNTRIES_FAIL,\r\n  GET_COUNTRIES_SUCCESS,\r\n  UPDATE_VERIFICATION_SUCCESS,\r\n  UPDATE_VERIFICATION_FAIL,\r\n  SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS,\r\n  SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL,\r\n  UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS,\r\n  UPDATE_PASSWORD_SPECIFIC_USER_FAIL,\r\n  SET_SHOW_GAME_ITEMS_SUCCESS,\r\n  SET_DISPLAY_RFP_SUCCESS,\r\n  CREATE_DATA_USER_SUCCESS,\r\n  CREATE_DATA_USER_FAIL,\r\n  SET_USERNAMEGAME,\r\n  GET_GAME_ID_INFO_SUCCESS,\r\n  GET_GAME_ID_INFO_FAIL,\r\n  DELETE_GAME_ID_SUCCESS,\r\n  DELETE_GAME_ID_FAIL,\r\n  CREATE_TOURNAMENT_SUCCESS,\r\n  CREATE_TOURNAMENT_FAIL,\r\n  ACTIVE_TOURNAMENT_SUCCESS,\r\n  ACTIVE_TOURNAMENT_FAIL,\r\n  PREVIOUS_TOURNAMENT_FAIL,\r\n  PREVIOUS_TOURNAMENT_SUCCESS,\r\n  DELETE_TOURNAMENT_SUCCESS,\r\n  DELETE_TOURNAMENT_FAIL,\r\n  CREATE_REGISTER_GAME_SUCCESS,\r\n  CREATE_REGISTER_GAME_FAIL,\r\n  GET_REGISTER_USER_TOURNAMENT_SUCCESS,\r\n  GET_REGISTER_USER_TOURNAMENT_FAIL,\r\n  START_TOURNAMENT_SUCCESS,\r\n  START_TOURNAMENT_FAIL,\r\n  SET_START_TOURNAMENT,\r\n  SET_REGISTER_TOURNAMENT,\r\n  SET_CREATE_TOURNAMENT,\r\n  GET_USER_INFO_SUCCESS,\r\n  GET_USER_INFO_FAIL,\r\n  UPDATE_USER_INFO_SUCCESS,\r\n  UPDATE_USER_INFO_FAIL,\r\n  SET_USER_SETTING,\r\n  SET_GAME_ID_DELETED_TOURNAMENT,\r\n  SET_USER_LOCATIN_TOURNAMENT,\r\n  UPDATE_USER_LOCATION_SUCCESS,\r\n  UPDATE_USER_LOCATIONO_FAIL,\r\n  UPDATE_USER_PASSWORD_SUCCESS,\r\n  UPDATE_USER_PASSWORD_FAIL,\r\n  SET_USER_PASSWORD,\r\n  GET_ALL_USER_FALCON_SUCCESS,\r\n  GET_ALL_USER_FALCON_FAIL,\r\n  SET_SWITCH_USERS\r\n} from \"./types\";\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n\r\n    \r\n    case SET_SWITCH_USERS:\r\n      return {\r\n        ...state,\r\n        switchBetweenUserAndPersonalInfo: action.payload,\r\n      };\r\n    case GET_ALL_USER_FALCON_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allUserFalconData: action.payload,\r\n      };\r\n    case GET_ALL_USER_FALCON_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    \r\n\r\n    \r\n    case UPDATE_USER_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserPasswordData: action.payload,\r\n      };\r\n    case UPDATE_USER_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    \r\n    \r\n    case UPDATE_USER_LOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserLocationData: action.payload,\r\n      };\r\n    case UPDATE_USER_LOCATIONO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    \r\n    case UPDATE_USER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserData: action.payload,\r\n      };\r\n    case UPDATE_USER_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    \r\n    case GET_USER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userInfoData: action.payload,\r\n      };\r\n    case GET_USER_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case SET_USER_PASSWORD:\r\n      return {\r\n        ...state,\r\n        updateUserPasswordData: null,\r\n      };\r\n\r\n    case SET_CREATE_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        createTournamentData: null,\r\n      };\r\n\r\n    case SET_USER_LOCATIN_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        updateUserLocationData: null,\r\n      };\r\n\r\n    case SET_GAME_ID_DELETED_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        deleteGameIdData: null,\r\n      };\r\n\r\n    case SET_USER_SETTING:\r\n      return {\r\n        ...state,\r\n        updateUserData: null,\r\n      };\r\n\r\n    case SET_REGISTER_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        registerGameUserData: null,\r\n      };\r\n\r\n    case SET_START_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        startTournmentData: null,\r\n      };\r\n\r\n\r\n    case START_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        startTournmentData: action.payload,\r\n      };\r\n    case START_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case GET_REGISTER_USER_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerForThisGameData: action.payload,\r\n      };\r\n    case GET_REGISTER_USER_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case CREATE_REGISTER_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerGameUserData: action.payload,\r\n      };\r\n    case CREATE_REGISTER_GAME_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case DELETE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        deletedTournamentData: action.payload,\r\n      };\r\n    case DELETE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case PREVIOUS_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        previousTournamentData: action.payload,\r\n      };\r\n    case PREVIOUS_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case ACTIVE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        activeTournamentData: action.payload,\r\n      };\r\n    case ACTIVE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case CREATE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createTournamentData: action.payload,\r\n      };\r\n    case CREATE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_USERNAMEGAME:\r\n      return {\r\n        ...state,\r\n        usernameGameData: action.payload,\r\n      };\r\n    case SET_SHOW_GAME_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ShowGameItem: action.payload,\r\n      };\r\n    case DELETE_GAME_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        deleteGameIdData: action.payload,\r\n      };\r\n    case DELETE_GAME_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_GAME_ID_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        gameIdInfoData: action.payload,\r\n      };\r\n    case GET_GAME_ID_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_DISPLAY_RFP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createOrUpdateSurveyData: action.payload,\r\n      };\r\n\r\n    case CREATE_DATA_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        checkUserData: action.payload,\r\n      };\r\n    case CREATE_DATA_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updatePasswordSpecificUserData: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_SPECIFIC_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        sendEmailForChangePasswordData: action.payload,\r\n      };\r\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case UPDATE_VERIFICATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateVerificationData: action.payload,\r\n      };\r\n    case UPDATE_VERIFICATION_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_COUNTRIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        countriesData: action.payload,\r\n      };\r\n    case GET_COUNTRIES_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_POPUP:\r\n      return {\r\n        ...state,\r\n        popupAlertData: action.payload,\r\n        createdItemInUserData: null,\r\n      };\r\n    case LOGEDDIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logedinUserData: action.payload,\r\n      };\r\n    case LOGEDDIN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case CREATE_ITEM_IN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createdItemInUserData: action.payload,\r\n      };\r\n    case CREATE_ITEM_IN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_USER_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userByIdData: action.payload,\r\n      };\r\n    case GET_USER_BY_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    //authentication and authorization\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(`token`, `'` + action.payload.token + `'`);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        token: action.payload.token,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        err: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        err: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}