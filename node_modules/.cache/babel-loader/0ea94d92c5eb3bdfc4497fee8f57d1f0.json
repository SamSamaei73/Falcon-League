{"ast":null,"code":"import axios from\"axios\";import{SERVER_URL}from\"../../Context/constant\";var setAuthToken=function setAuthToken(token){if(token){axios.defaults.headers.common[\"X-Access-Token\"]=token;}else{delete axios.defaults.headers.common[\"X-Access-Token\"];}};var interceptorForAxios=function interceptorForAxios(){axios.interceptors.request.use(function(config){var accessToken=localStorage.getItem(\"accessToken\");if(accessToken){config.headers[\"x-auth-token\"]=accessToken;}return config;},function(error){Promise.reject(error);});//response interceptor to refresh token on receiving token expired error\naxios.interceptors.response.use(function(response){return response;},function(error){var originalRequest=error.config;var refreshToken=localStorage.getItem(\"refreshToken\");if(refreshToken&&error.response.status===401&&!originalRequest._retry){originalRequest._retry=true;return axios.post(\"\".concat(SERVER_URL,\"/refresh_token\"),{refreshToken:refreshToken}).then(function(res){if(res.status===200){localStorage.setItem(\"accessToken\",res.data.accessToken);console.log(\"Access token refreshed!\",res.data.accessToken);return axios(originalRequest);}});}return Promise.reject(error);});};export default interceptorForAxios;","map":{"version":3,"names":["axios","SERVER_URL","setAuthToken","token","defaults","headers","common","interceptorForAxios","interceptors","request","use","config","accessToken","localStorage","getItem","error","Promise","reject","response","originalRequest","refreshToken","status","_retry","post","then","res","setItem","data","console","log"],"sources":["/Users/samsamaei/Documents/Projects/falcon/src/Components/Tools/setAuthToken.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"../../Context/constant\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"X-Access-Token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"X-Access-Token\"];\r\n  }\r\n};\r\n\r\nconst interceptorForAxios = () => {\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      if (accessToken) {\r\n        config.headers[\"x-auth-token\"] = accessToken;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  //response interceptor to refresh token on receiving token expired error\r\n  axios.interceptors.response.use(\r\n    (response) => {\r\n      return response;\r\n    },\r\n    function (error) {\r\n      const originalRequest = error.config;\r\n      let refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n      if (\r\n        refreshToken &&\r\n        error.response.status === 401 &&\r\n        !originalRequest._retry\r\n      ) {\r\n        originalRequest._retry = true;\r\n        return axios\r\n          .post(`${SERVER_URL}/refresh_token`, { refreshToken: refreshToken })\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              localStorage.setItem(\"accessToken\", res.data.accessToken);\r\n              console.log(\"Access token refreshed!\", res.data.accessToken);\r\n              return axios(originalRequest);\r\n            }\r\n          });\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\nexport default interceptorForAxios;\r\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,wBAA3B,CAEA,GAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,KAAD,CAAW,CAC9B,GAAIA,KAAJ,CAAW,CACTH,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,gBAA9B,EAAkDH,KAAlD,CACD,CAFD,IAEO,CACL,MAAOH,MAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,gBAA9B,CAAP,CACD,CACF,CAND,CAQA,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,EAAM,CAChCP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,SAACC,MAAD,CAAY,CACV,GAAMC,YAAW,CAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB,CACA,GAAIF,WAAJ,CAAiB,CACfD,MAAM,CAACN,OAAP,CAAe,cAAf,EAAiCO,WAAjC,CACD,CACD,MAAOD,OAAP,CACD,CAPH,CAQE,SAACI,KAAD,CAAW,CACTC,OAAO,CAACC,MAAR,CAAeF,KAAf,EACD,CAVH,EAaA;AACAf,KAAK,CAACQ,YAAN,CAAmBU,QAAnB,CAA4BR,GAA5B,CACE,SAACQ,QAAD,CAAc,CACZ,MAAOA,SAAP,CACD,CAHH,CAIE,SAAUH,KAAV,CAAiB,CACf,GAAMI,gBAAe,CAAGJ,KAAK,CAACJ,MAA9B,CACA,GAAIS,aAAY,CAAGP,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAnB,CAEA,GACEM,YAAY,EACZL,KAAK,CAACG,QAAN,CAAeG,MAAf,GAA0B,GAD1B,EAEA,CAACF,eAAe,CAACG,MAHnB,CAIE,CACAH,eAAe,CAACG,MAAhB,CAAyB,IAAzB,CACA,MAAOtB,MAAK,CACTuB,IADI,WACItB,UADJ,mBACgC,CAAEmB,YAAY,CAAEA,YAAhB,CADhC,EAEJI,IAFI,CAEC,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACJ,MAAJ,GAAe,GAAnB,CAAwB,CACtBR,YAAY,CAACa,OAAb,CAAqB,aAArB,CAAoCD,GAAG,CAACE,IAAJ,CAASf,WAA7C,EACAgB,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAuCJ,GAAG,CAACE,IAAJ,CAASf,WAAhD,EACA,MAAOZ,MAAK,CAACmB,eAAD,CAAZ,CACD,CACF,CARI,CAAP,CASD,CACD,MAAOH,QAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACD,CAzBH,EA2BD,CA1CD,CA4CA,cAAeR,oBAAf"},"metadata":{},"sourceType":"module"}