{"ast":null,"code":"import _regeneratorRuntime from\"/Users/samsamaei/Documents/Projects/falcon/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/samsamaei/Documents/Projects/falcon/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/samsamaei/Documents/Projects/falcon/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useReducer}from\"react\";import axios from\"axios\";import TestContext from\"./testContext\";import TestReducer from\"./testReducer\";import{SERVER_URL}from\"./constant\";import setAuthToken from\"../Components/Tools/setAuthToken\";import{CREATE_ITEM_IN_USER_SUCCESS,CREATE_ITEM_IN_USER_FAIL,GET_USER_BY_ID_SUCCESS,GET_USER_BY_ID_FAIL,SET_POPUP,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_ERRORS,GET_COUNTRIES_SUCCESS,GET_COUNTRIES_FAIL,UPDATE_VERIFICATION_SUCCESS,UPDATE_VERIFICATION_FAIL,SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS,SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL,UPDATE_PASSWORD_SPECIFIC_USER_FAIL,UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS,SET_SHOW_GAME_ITEMS_SUCCESS,SET_DISPLAY_RFP_SUCCESS,CREATE_DATA_USER_SUCCESS,CREATE_DATA_USER_FAIL,SET_USERNAMEGAME,GET_GAME_ID_INFO_SUCCESS,GET_GAME_ID_INFO_FAIL,DELETE_GAME_ID_SUCCESS,DELETE_GAME_ID_FAIL,CREATE_TOURNAMENT_SUCCESS,CREATE_TOURNAMENT_FAIL,ACTIVE_TOURNAMENT_SUCCESS,ACTIVE_TOURNAMENT_FAIL,PREVIOUS_TOURNAMENT_SUCCESS,PREVIOUS_TOURNAMENT_FAIL,DELETE_TOURNAMENT_SUCCESS,DELETE_TOURNAMENT_FAIL}from\"./types\";import{jsx as _jsx}from\"react/jsx-runtime\";var TestState=function TestState(props){var initialState={token:localStorage.getItem(\"token\"),err:null,selectedDate:null,createdItemInUserData:null,userByIdData:null,logedinUserData:null,popupAlertData:null,countriesData:null,updateVerificationData:null,sendEmailForChangePasswordData:null,updatePasswordSpecificUserData:null,ShowGameItem:null,checkUserData:null,usernameGameData:null,gameIdInfoData:null,isAuthenticated:null,deleteGameIdData:null,loading:false,user:null,createTournamentData:null,activeTournamentData:[],previousTournamentData:[],deletedTournamentData:null};var _useReducer=useReducer(TestReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var SetShowGamelItems=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(showorhide,displayStyle){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:SET_SHOW_GAME_ITEMS_SUCCESS,payload:showorhide});dispatch({type:SET_DISPLAY_RFP_SUCCESS,payload:displayStyle});case 2:case\"end\":return _context.stop();}}},_callee);}));return function SetShowGamelItems(_x,_x2){return _ref.apply(this,arguments);};}();var SetUsername=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return dispatch({type:SET_USERNAMEGAME,payload:data});case 3:_context2.next=7;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);case 7:case\"end\":return _context2.stop();}}},_callee2,null,[[0,5]]);}));return function SetUsername(_x3){return _ref2.apply(this,arguments);};}();var SetPopup=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return dispatch({type:SET_POPUP,payload:data});case 3:_context3.next=7;break;case 5:_context3.prev=5;_context3.t0=_context3[\"catch\"](0);case 7:case\"end\":return _context3.stop();}}},_callee3,null,[[0,5]]);}));return function SetPopup(_x4){return _ref3.apply(this,arguments);};}();var loadUser=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var res;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:setAuthToken(localStorage.token);_context4.prev=1;_context4.next=4;return axios.get(SERVER_URL+\"/auth\");case 4:res=_context4.sent;console.log(\"auth data res\",res.data);_context4.next=8;return dispatch({type:USER_LOADED,payload:res.data});case 8:_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](1);dispatch({type:AUTH_ERROR});case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[1,10]]);}));return function loadUser(){return _ref4.apply(this,arguments);};}();var CheckUserExist=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(frmData){var config,res;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:setAuthToken(localStorage.token);config={headers:{\"Content-Type\":\"application/json\"}};_context5.prev=2;_context5.next=5;return axios.post(SERVER_URL+\"/CheckUserExist/\",frmData,config);case 5:res=_context5.sent;dispatch({type:CREATE_DATA_USER_SUCCESS,payload:res.data});// })\n_context5.next=12;break;case 9:_context5.prev=9;_context5.t0=_context5[\"catch\"](2);dispatch({type:CREATE_DATA_USER_FAIL,payload:_context5.t0});case 12:case\"end\":return _context5.stop();}}},_callee5,null,[[2,9]]);}));return function CheckUserExist(_x5){return _ref5.apply(this,arguments);};}();var CreateItemInUser=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(frmData){var config,res;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:// setAuthToken(localStorage.token);\nconfig={headers:{\"Content-Type\":\"application/json\"}};_context6.prev=1;_context6.next=4;return axios.post(SERVER_URL+\"/CreateItemInUser/\",frmData,config);case 4:res=_context6.sent;dispatch({type:CREATE_ITEM_IN_USER_SUCCESS,payload:res.data});// })\n_context6.next=11;break;case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](1);dispatch({type:CREATE_ITEM_IN_USER_FAIL,payload:_context6.t0});case 11:case\"end\":return _context6.stop();}}},_callee6,null,[[1,8]]);}));return function CreateItemInUser(_x6){return _ref6.apply(this,arguments);};}();var DeleteTournament=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(frmData){var config,res;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:setAuthToken(localStorage.token);config={headers:{\"Content-Type\":\"application/json\"}};_context7.prev=2;_context7.next=5;return axios.post(SERVER_URL+\"/DeleteTournament/\",frmData,config);case 5:res=_context7.sent;dispatch({type:DELETE_TOURNAMENT_SUCCESS,payload:res.data});// })\n_context7.next=12;break;case 9:_context7.prev=9;_context7.t0=_context7[\"catch\"](2);dispatch({type:DELETE_TOURNAMENT_FAIL,payload:_context7.t0});case 12:case\"end\":return _context7.stop();}}},_callee7,null,[[2,9]]);}));return function DeleteTournament(_x7){return _ref7.apply(this,arguments);};}();var GetPreviousTournaments=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(){var config,res;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:setAuthToken(localStorage.token);config={headers:{\"Content-Type\":\"application/json\"}};_context8.prev=2;_context8.next=5;return axios.get(SERVER_URL+\"/GetPreviousTournaments/\",config);case 5:res=_context8.sent;dispatch({type:PREVIOUS_TOURNAMENT_SUCCESS,payload:res.data});// })\n_context8.next=12;break;case 9:_context8.prev=9;_context8.t0=_context8[\"catch\"](2);dispatch({type:PREVIOUS_TOURNAMENT_FAIL,payload:_context8.t0});case 12:case\"end\":return _context8.stop();}}},_callee8,null,[[2,9]]);}));return function GetPreviousTournaments(){return _ref8.apply(this,arguments);};}();var GetActiveTournaments=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(id){var config,res;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:setAuthToken(localStorage.token);config={headers:{\"Content-Type\":\"application/json\"}};_context9.prev=2;_context9.next=5;return axios.get(SERVER_URL+\"/GetActiveTournaments/\"+id,config);case 5:res=_context9.sent;dispatch({type:ACTIVE_TOURNAMENT_SUCCESS,payload:res.data});// })\n_context9.next=12;break;case 9:_context9.prev=9;_context9.t0=_context9[\"catch\"](2);dispatch({type:ACTIVE_TOURNAMENT_FAIL,payload:_context9.t0});case 12:case\"end\":return _context9.stop();}}},_callee9,null,[[2,9]]);}));return function GetActiveTournaments(_x8){return _ref9.apply(this,arguments);};}();var CreateTournament=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(frmData){var config,res;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:setAuthToken(localStorage.token);config={headers:{\"Content-Type\":\"application/json\"}};_context10.prev=2;_context10.next=5;return axios.post(SERVER_URL+\"/CreateTournament/\",frmData,config);case 5:res=_context10.sent;dispatch({type:CREATE_TOURNAMENT_SUCCESS,payload:res.data});// })\n_context10.next=12;break;case 9:_context10.prev=9;_context10.t0=_context10[\"catch\"](2);dispatch({type:CREATE_TOURNAMENT_FAIL,payload:_context10.t0});case 12:case\"end\":return _context10.stop();}}},_callee10,null,[[2,9]]);}));return function CreateTournament(_x9){return _ref10.apply(this,arguments);};}();var SendEmailForChangePassword=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(frmData){var config,res;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:// setAuthToken(localStorage.token);\nconfig={headers:{\"Content-Type\":\"application/json\"}};_context11.prev=1;_context11.next=4;return axios.post(SERVER_URL+\"/SendEmailForChangePassword/\",frmData,config);case 4:res=_context11.sent;dispatch({type:SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS,payload:res.data});// })\n_context11.next=11;break;case 8:_context11.prev=8;_context11.t0=_context11[\"catch\"](1);dispatch({type:SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL,payload:_context11.t0});case 11:case\"end\":return _context11.stop();}}},_callee11,null,[[1,8]]);}));return function SendEmailForChangePassword(_x10){return _ref11.apply(this,arguments);};}();var GetAllUserAccounts=/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(frmData){var config,res;return _regeneratorRuntime().wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:setAuthToken(localStorage.token);config={headers:{\"Content-Type\":\"application/json\"}};_context12.prev=2;_context12.next=5;return axios.get(SERVER_URL+\"/GetAllUserAccounts/\",config);case 5:res=_context12.sent;dispatch({type:GET_GAME_ID_INFO_SUCCESS,payload:res.data});// })\n_context12.next=12;break;case 9:_context12.prev=9;_context12.t0=_context12[\"catch\"](2);dispatch({type:GET_GAME_ID_INFO_FAIL,payload:_context12.t0});case 12:case\"end\":return _context12.stop();}}},_callee12,null,[[2,9]]);}));return function GetAllUserAccounts(_x11){return _ref12.apply(this,arguments);};}();var DeleteAccountOfUser=/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(frmData){var config,res;return _regeneratorRuntime().wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:setAuthToken(localStorage.token);config={headers:{\"Content-Type\":\"application/json\"}};console.log(\"delet2\",frmData);_context13.prev=3;_context13.next=6;return axios.post(SERVER_URL+\"/DeleteAccountOfUser/\",frmData,config);case 6:res=_context13.sent;console.log(\"delet\",res.data);dispatch({type:DELETE_GAME_ID_SUCCESS,payload:res.data});// })\n_context13.next=14;break;case 11:_context13.prev=11;_context13.t0=_context13[\"catch\"](3);dispatch({type:DELETE_GAME_ID_FAIL,payload:_context13.t0});case 14:case\"end\":return _context13.stop();}}},_callee13,null,[[3,11]]);}));return function DeleteAccountOfUser(_x12){return _ref13.apply(this,arguments);};}();var UpdatePasswordSpecificUser=/*#__PURE__*/function(){var _ref14=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(frmData){var config,res;return _regeneratorRuntime().wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:// setAuthToken(localStorage.token);\nconfig={headers:{\"Content-Type\":\"application/json\"}};_context14.prev=1;_context14.next=4;return axios.post(SERVER_URL+\"/UpdatePasswordSpecificUser/\",frmData,config);case 4:res=_context14.sent;dispatch({type:UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS,payload:res.data});// })\n_context14.next=11;break;case 8:_context14.prev=8;_context14.t0=_context14[\"catch\"](1);dispatch({type:UPDATE_PASSWORD_SPECIFIC_USER_FAIL,payload:_context14.t0});case 11:case\"end\":return _context14.stop();}}},_callee14,null,[[1,8]]);}));return function UpdatePasswordSpecificUser(_x13){return _ref14.apply(this,arguments);};}();var GetUserInfoById=/*#__PURE__*/function(){var _ref15=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(id){var config,res;return _regeneratorRuntime().wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0://setAuthToken(localStorage.token);\nconfig={headers:{\"Content-Type\":\"application/json\",id:id}};_context15.prev=1;_context15.next=4;return axios.get(SERVER_URL+\"/GetLoggedInUser/\",config);case 4:res=_context15.sent;dispatch({type:GET_USER_BY_ID_SUCCESS,payload:res.data});// })\n_context15.next=11;break;case 8:_context15.prev=8;_context15.t0=_context15[\"catch\"](1);dispatch({type:GET_USER_BY_ID_FAIL,payload:_context15.t0});case 11:case\"end\":return _context15.stop();}}},_callee15,null,[[1,8]]);}));return function GetUserInfoById(_x14){return _ref15.apply(this,arguments);};}();var GetCountries=/*#__PURE__*/function(){var _ref16=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(){var config,res;return _regeneratorRuntime().wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0://setAuthToken(localStorage.token);\nconfig={headers:{\"Content-Type\":\"application/json\"}};_context16.prev=1;_context16.next=4;return axios.get(SERVER_URL+\"/GetCountries/\",config);case 4:res=_context16.sent;dispatch({type:GET_COUNTRIES_SUCCESS,payload:res.data});_context16.next=11;break;case 8:_context16.prev=8;_context16.t0=_context16[\"catch\"](1);dispatch({type:GET_COUNTRIES_FAIL,payload:_context16.t0});case 11:case\"end\":return _context16.stop();}}},_callee16,null,[[1,8]]);}));return function GetCountries(){return _ref16.apply(this,arguments);};}();var UpdateVerification=/*#__PURE__*/function(){var _ref17=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(formData){var config,res;return _regeneratorRuntime().wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:config={headers:{\"Content-Type\":\"application/json\"}};_context17.prev=1;_context17.next=4;return axios.post(SERVER_URL+\"/UpdateVerification\",formData,config);case 4:res=_context17.sent;dispatch({type:UPDATE_VERIFICATION_SUCCESS,payload:res.data});loadUser();_context17.next=12;break;case 9:_context17.prev=9;_context17.t0=_context17[\"catch\"](1);dispatch({type:UPDATE_VERIFICATION_FAIL,payload:_context17.t0.response});case 12:case\"end\":return _context17.stop();}}},_callee17,null,[[1,9]]);}));return function UpdateVerification(_x15){return _ref17.apply(this,arguments);};}();// Login User\nvar login=/*#__PURE__*/function(){var _ref18=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(formData){var config,res;return _regeneratorRuntime().wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:config={headers:{\"Content-Type\":\"application/json\"}};_context18.prev=1;_context18.next=4;return axios.post(SERVER_URL+\"/login\",formData,config);case 4:res=_context18.sent;console.log(\"login:\",res.data.token);dispatch({type:LOGIN_SUCCESS,payload:res.data});loadUser();_context18.next=14;break;case 10:_context18.prev=10;_context18.t0=_context18[\"catch\"](1);console.log(\"loginerror:\",_context18.t0);dispatch({type:LOGIN_FAIL,payload:_context18.t0.response});case 14:case\"end\":return _context18.stop();}}},_callee18,null,[[1,10]]);}));return function login(_x16){return _ref18.apply(this,arguments);};}();// Logout\nvar logout=function logout(){return dispatch({type:LOGOUT});};// Clear Errors\nvar clearErrors=function clearErrors(){return dispatch({type:CLEAR_ERRORS});};return/*#__PURE__*/_jsx(TestContext.Provider,{value:{token:state.token,err:state.err,createdItemInUserData:state.createdItemInUserData,userByIdData:state.userByIdData,logedinUserData:state.logedinUserData,isAuthenticated:state.isAuthenticated,loading:state.loading,user:state.user,popupAlertData:state.popupAlertData,countriesData:state.countriesData,updateVerificationData:state.updateVerificationData,sendEmailForChangePasswordData:state.sendEmailForChangePasswordData,updatePasswordSpecificUserData:state.updatePasswordSpecificUserData,ShowGameItem:state.ShowGameItem,checkUserData:state.checkUserData,usernameGameData:state.usernameGameData,gameIdInfoData:state.gameIdInfoData,deleteGameIdData:state.deleteGameIdData,createTournamentData:state.createTournamentData,activeTournamentData:state.activeTournamentData,previousTournamentData:state.previousTournamentData,deletedTournamentData:state.deletedTournamentData,CreateItemInUser:CreateItemInUser,GetUserInfoById:GetUserInfoById,login:login,loadUser:loadUser,logout:logout,clearErrors:clearErrors,GetAllUserAccounts:GetAllUserAccounts,SetPopup:SetPopup,GetCountries:GetCountries,UpdateVerification:UpdateVerification,SendEmailForChangePassword:SendEmailForChangePassword,UpdatePasswordSpecificUser:UpdatePasswordSpecificUser,SetShowGamelItems:SetShowGamelItems,CheckUserExist:CheckUserExist,SetUsername:SetUsername,DeleteAccountOfUser:DeleteAccountOfUser,CreateTournament:CreateTournament,GetActiveTournaments:GetActiveTournaments,GetPreviousTournaments:GetPreviousTournaments,DeleteTournament:DeleteTournament},children:props.children});};export default TestState;","map":{"version":3,"names":["React","useReducer","axios","TestContext","TestReducer","SERVER_URL","setAuthToken","CREATE_ITEM_IN_USER_SUCCESS","CREATE_ITEM_IN_USER_FAIL","GET_USER_BY_ID_SUCCESS","GET_USER_BY_ID_FAIL","SET_POPUP","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","GET_COUNTRIES_SUCCESS","GET_COUNTRIES_FAIL","UPDATE_VERIFICATION_SUCCESS","UPDATE_VERIFICATION_FAIL","SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS","SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL","UPDATE_PASSWORD_SPECIFIC_USER_FAIL","UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS","SET_SHOW_GAME_ITEMS_SUCCESS","SET_DISPLAY_RFP_SUCCESS","CREATE_DATA_USER_SUCCESS","CREATE_DATA_USER_FAIL","SET_USERNAMEGAME","GET_GAME_ID_INFO_SUCCESS","GET_GAME_ID_INFO_FAIL","DELETE_GAME_ID_SUCCESS","DELETE_GAME_ID_FAIL","CREATE_TOURNAMENT_SUCCESS","CREATE_TOURNAMENT_FAIL","ACTIVE_TOURNAMENT_SUCCESS","ACTIVE_TOURNAMENT_FAIL","PREVIOUS_TOURNAMENT_SUCCESS","PREVIOUS_TOURNAMENT_FAIL","DELETE_TOURNAMENT_SUCCESS","DELETE_TOURNAMENT_FAIL","TestState","props","initialState","token","localStorage","getItem","err","selectedDate","createdItemInUserData","userByIdData","logedinUserData","popupAlertData","countriesData","updateVerificationData","sendEmailForChangePasswordData","updatePasswordSpecificUserData","ShowGameItem","checkUserData","usernameGameData","gameIdInfoData","isAuthenticated","deleteGameIdData","loading","user","createTournamentData","activeTournamentData","previousTournamentData","deletedTournamentData","state","dispatch","SetShowGamelItems","showorhide","displayStyle","type","payload","SetUsername","data","SetPopup","loadUser","get","res","console","log","CheckUserExist","frmData","config","headers","post","CreateItemInUser","DeleteTournament","GetPreviousTournaments","GetActiveTournaments","id","CreateTournament","SendEmailForChangePassword","GetAllUserAccounts","DeleteAccountOfUser","UpdatePasswordSpecificUser","GetUserInfoById","GetCountries","UpdateVerification","formData","response","login","logout","clearErrors","children"],"sources":["/Users/samsamaei/Documents/Projects/falcon/src/Context/testState.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport TestContext from \"./testContext\";\r\nimport TestReducer from \"./testReducer\";\r\nimport { SERVER_URL } from \"./constant\";\r\nimport setAuthToken from \"../Components/Tools/setAuthToken\";\r\nimport {\r\n  CREATE_ITEM_IN_USER_SUCCESS,\r\n  CREATE_ITEM_IN_USER_FAIL,\r\n  GET_USER_BY_ID_SUCCESS,\r\n  GET_USER_BY_ID_FAIL,\r\n  SET_POPUP,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  GET_COUNTRIES_SUCCESS,\r\n  GET_COUNTRIES_FAIL,\r\n  UPDATE_VERIFICATION_SUCCESS,\r\n  UPDATE_VERIFICATION_FAIL,\r\n  SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS,\r\n  SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL,\r\n  UPDATE_PASSWORD_SPECIFIC_USER_FAIL,\r\n  UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS,\r\n  SET_SHOW_GAME_ITEMS_SUCCESS,\r\n  SET_DISPLAY_RFP_SUCCESS,\r\n  CREATE_DATA_USER_SUCCESS,\r\n  CREATE_DATA_USER_FAIL,\r\n  SET_USERNAMEGAME,\r\n  GET_GAME_ID_INFO_SUCCESS,\r\n  GET_GAME_ID_INFO_FAIL,\r\n  DELETE_GAME_ID_SUCCESS,\r\n  DELETE_GAME_ID_FAIL,\r\n  CREATE_TOURNAMENT_SUCCESS,\r\n  CREATE_TOURNAMENT_FAIL,\r\n  ACTIVE_TOURNAMENT_SUCCESS,\r\n  ACTIVE_TOURNAMENT_FAIL,\r\n  PREVIOUS_TOURNAMENT_SUCCESS,\r\n  PREVIOUS_TOURNAMENT_FAIL,\r\n  DELETE_TOURNAMENT_SUCCESS,\r\n  DELETE_TOURNAMENT_FAIL,\r\n} from \"./types\";\r\n\r\nconst TestState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    err: null,\r\n    selectedDate: null,\r\n    createdItemInUserData: null,\r\n    userByIdData: null,\r\n    logedinUserData: null,\r\n    popupAlertData: null,\r\n    countriesData: null,\r\n    updateVerificationData: null,\r\n    sendEmailForChangePasswordData: null,\r\n    updatePasswordSpecificUserData: null,\r\n    ShowGameItem: null,\r\n    checkUserData: null,\r\n    usernameGameData: null,\r\n    gameIdInfoData: null,\r\n    isAuthenticated: null,\r\n    deleteGameIdData: null,\r\n    loading: false,\r\n    user: null,\r\n    createTournamentData: null,\r\n    activeTournamentData: [],\r\n    previousTournamentData: [],\r\n    deletedTournamentData: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(TestReducer, initialState);\r\n  const SetShowGamelItems = async (showorhide, displayStyle) => {\r\n    dispatch({\r\n      type: SET_SHOW_GAME_ITEMS_SUCCESS,\r\n      payload: showorhide,\r\n    });\r\n\r\n    dispatch({\r\n      type: SET_DISPLAY_RFP_SUCCESS,\r\n      payload: displayStyle,\r\n    });\r\n  };\r\n  const SetUsername = async (data) => {\r\n    try {\r\n      await dispatch({\r\n        type: SET_USERNAMEGAME,\r\n        payload: data,\r\n      });\r\n    } catch (err) {}\r\n  };\r\n\r\n  const SetPopup = async (data) => {\r\n    try {\r\n      await dispatch({\r\n        type: SET_POPUP,\r\n        payload: data,\r\n      });\r\n    } catch (err) {}\r\n  };\r\n  const loadUser = async () => {\r\n    setAuthToken(localStorage.token);\r\n\r\n    try {\r\n      const res = await axios.get(SERVER_URL + \"/auth\");\r\n      console.log(\"auth data res\", res.data);\r\n      await dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  };\r\n  const CheckUserExist = async (frmData) => {\r\n    setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        SERVER_URL + \"/CheckUserExist/\",\r\n        frmData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: CREATE_DATA_USER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CREATE_DATA_USER_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const CreateItemInUser = async (frmData) => {\r\n    // setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        SERVER_URL + \"/CreateItemInUser/\",\r\n        frmData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: CREATE_ITEM_IN_USER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CREATE_ITEM_IN_USER_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const DeleteTournament = async (frmData) => {\r\n    setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        SERVER_URL + \"/DeleteTournament/\",\r\n        frmData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: DELETE_TOURNAMENT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: DELETE_TOURNAMENT_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  \r\n  const GetPreviousTournaments = async () => {\r\n    setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        SERVER_URL + \"/GetPreviousTournaments/\",\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PREVIOUS_TOURNAMENT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PREVIOUS_TOURNAMENT_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const GetActiveTournaments = async (id) => {\r\n    setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        SERVER_URL + \"/GetActiveTournaments/\" + id,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: ACTIVE_TOURNAMENT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: ACTIVE_TOURNAMENT_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const CreateTournament = async (frmData) => {\r\n    setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        SERVER_URL + \"/CreateTournament/\",\r\n        frmData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: CREATE_TOURNAMENT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: CREATE_TOURNAMENT_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const SendEmailForChangePassword = async (frmData) => {\r\n    // setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        SERVER_URL + \"/SendEmailForChangePassword/\",\r\n        frmData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const GetAllUserAccounts = async (frmData) => {\r\n    setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(SERVER_URL + \"/GetAllUserAccounts/\", config);\r\n      dispatch({\r\n        type: GET_GAME_ID_INFO_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_GAME_ID_INFO_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const DeleteAccountOfUser = async (frmData) => {\r\n    setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    console.log(\"delet2\", frmData);\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        SERVER_URL + \"/DeleteAccountOfUser/\",\r\n        frmData,\r\n        config\r\n      );\r\n      console.log(\"delet\", res.data);\r\n      dispatch({\r\n        type: DELETE_GAME_ID_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: DELETE_GAME_ID_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const UpdatePasswordSpecificUser = async (frmData) => {\r\n    // setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        SERVER_URL + \"/UpdatePasswordSpecificUser/\",\r\n        frmData,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: UPDATE_PASSWORD_SPECIFIC_USER_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const GetUserInfoById = async (id) => {\r\n    //setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        id: id,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(SERVER_URL + \"/GetLoggedInUser/\", config);\r\n      dispatch({\r\n        type: GET_USER_BY_ID_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      // })\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_USER_BY_ID_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const GetCountries = async () => {\r\n    //setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(SERVER_URL + \"/GetCountries/\", config);\r\n      dispatch({\r\n        type: GET_COUNTRIES_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_COUNTRIES_FAIL,\r\n        payload: err,\r\n      });\r\n    }\r\n  };\r\n  const UpdateVerification = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        SERVER_URL + \"/UpdateVerification\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: UPDATE_VERIFICATION_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      loadUser();\r\n    } catch (err) {\r\n      dispatch({\r\n        type: UPDATE_VERIFICATION_FAIL,\r\n        payload: err.response,\r\n      });\r\n    }\r\n  };\r\n  // Login User\r\n  const login = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(SERVER_URL + \"/login\", formData, config);\r\n      console.log(\"login:\", res.data.token);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      loadUser();\r\n    } catch (err) {\r\n      console.log(\"loginerror:\", err);\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: err.response,\r\n      });\r\n    }\r\n  };\r\n  // Logout\r\n  const logout = () => dispatch({ type: LOGOUT });\r\n  // Clear Errors\r\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\r\n\r\n  return (\r\n    <TestContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        err: state.err,\r\n        createdItemInUserData: state.createdItemInUserData,\r\n        userByIdData: state.userByIdData,\r\n        logedinUserData: state.logedinUserData,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        popupAlertData: state.popupAlertData,\r\n        countriesData: state.countriesData,\r\n        updateVerificationData: state.updateVerificationData,\r\n        sendEmailForChangePasswordData: state.sendEmailForChangePasswordData,\r\n        updatePasswordSpecificUserData: state.updatePasswordSpecificUserData,\r\n        ShowGameItem: state.ShowGameItem,\r\n        checkUserData: state.checkUserData,\r\n        usernameGameData: state.usernameGameData,\r\n        gameIdInfoData: state.gameIdInfoData,\r\n        deleteGameIdData: state.deleteGameIdData,\r\n        createTournamentData: state.createTournamentData,\r\n        activeTournamentData: state.activeTournamentData,\r\n        previousTournamentData: state.previousTournamentData,\r\n        deletedTournamentData: state.deletedTournamentData,\r\n\r\n        CreateItemInUser,\r\n        GetUserInfoById,\r\n        login,\r\n        loadUser,\r\n        logout,\r\n        clearErrors,\r\n        GetAllUserAccounts,\r\n        SetPopup,\r\n        GetCountries,\r\n        UpdateVerification,\r\n        SendEmailForChangePassword,\r\n        UpdatePasswordSpecificUser,\r\n        SetShowGamelItems,\r\n        CheckUserExist,\r\n        SetUsername,\r\n        DeleteAccountOfUser,\r\n        CreateTournament,\r\n        GetActiveTournaments,\r\n        GetPreviousTournaments,\r\n        DeleteTournament,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TestContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TestState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}