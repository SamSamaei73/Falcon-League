{"ast":null,"code":"var _jsxFileName = \"/Users/samsamaei/Documents/Projects/falcon/src/Context/Auth/authState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport authReducer from \"./AuthReducer\";\nimport setAuthToken from \"../../Components/Tools/setAuthToken\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../constant\";\nimport { // REGISTER_SUCCESS,\n// REGISTER_FAIL,\nUSER_LOADED, AUTH_ERROR, // FIRST_STEP_REGISTER_FAIL,\n// FIRST_STEP_REGISTER_SUCCESS,\nLOGIN_SUCCESS, SET_AUTH_HEADER, LOGIN_FAIL, // FIRST_STEP,\nLOGOUT, CLEAR_ERRORS // GET_ALL_USER_FOR_SPECIFIC_GROUP_SUCCESS,\n// GET_ALL_USER_FOR_SPECIFIC_GROUP_FAIL,\n// GET_USER_INFO_BY_ID_SUCCESS,\n// GET_USER_INFO_BY_ID_FAIL,\n} from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    verifyNum: null,\n    firstStepId: null,\n    loading: false,\n    user: null,\n    error: null,\n    allUserForSpecificGroupData: null,\n    userInfoByIdData: null,\n    token: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n\n  const loadUser = async () => {\n    console.log(\"t11\", // localStorage.getItem(\"token\"),\n    localStorage.token // localStorage[\"token\"]\n    ); // setTimeout(async () => {\n    //   console.log(\"\");\n    // }, 10);\n\n    await setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get(SERVER_URL + \"/auth\");\n      console.log(\"auth data res\", res.data);\n      await dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // const loadUser = async () => {\n  //   setAuthToken(localStorage.token);\n  //   try {\n  //     const res = await axios.get(SERVER_URL + \"/auth\");\n  //     //console.log(\"auth data res\", res.data);\n  //     await dispatch({\n  //       type: USER_LOADED,\n  //       payload: res.data,\n  //     });\n  //   } catch (err) {\n  //     dispatch({ type: AUTH_ERROR });\n  //   }\n  // };\n\n\n  const setAuthHeader = async DATA => {\n    await dispatch({\n      type: SET_AUTH_HEADER,\n      payload: DATA\n    });\n  }; // // FIRST_STEP\n  // const firstStep = (id) => {\n  //   dispatch({\n  //     type: FIRST_STEP,\n  //     payload: id,\n  //   });\n  // };\n  // // Register User\n  // const register = async (formData) => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   };\n  //   try {\n  //     const res = await axios.post(\n  //       SERVER_URL + \"/CreatTokenByIdAndVerifyNum\",\n  //       formData,\n  //       config\n  //     );\n  //     ////console.log('register data:', res.data);\n  //     dispatch({\n  //       type: REGISTER_SUCCESS,\n  //       payload: res.data,\n  //     });\n  //     loadUser();\n  //   } catch (err) {\n  //     dispatch({\n  //       type: REGISTER_FAIL,\n  //       payload: err.response.data.msgText,\n  //     });\n  //   }\n  // };\n  // // first Step Register\n  // const firstStepOfRegister = async (formData) => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   };\n  //   try {\n  //     const res = await axios.post(\n  //       SERVER_URL + \"/createItemInUser\",\n  //       formData,\n  //       config\n  //     );\n  //     //.then(async (data)=>{\n  //     //console.log(\"firstStep\", res.data);\n  //     firstStep(res.data.user.id);\n  //     dispatch({\n  //       type: FIRST_STEP_REGISTER_SUCCESS,\n  //       payload: res.data,\n  //     });\n  //     const { nationalID, passWord } = formData;\n  //     login({ nationalID: nationalID, password: passWord });\n  //     //console.log(\"formData:\", formData);\n  //     // })\n  //   } catch (err) {\n  //     ////console.log('firstStep err:', err.response.data.msgText);\n  //     let error = err;\n  //     await dispatch({\n  //       type: FIRST_STEP_REGISTER_FAIL,\n  //       payload: err.response.data,\n  //     });\n  //   }\n  // };\n  // Login User\n  // Login User\n\n\n  const login = async formData => {\n    // setAuthToken(localStorage.token);\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(SERVER_URL + \"/login\", formData, config); // console.log(\"login:\", res.data);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      await loadUser();\n      loadUser();\n    } catch (err) {\n      console.log(\"loginerror:\", err);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response\n      });\n    }\n  }; // const login = async (formData) => {\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   };\n  //   try {\n  //     const res = await axios.post(SERVER_URL + \"/login\", formData, config);\n  //     ////console.log('login:', res.data);\n  //     dispatch({\n  //       type: LOGIN_SUCCESS,\n  //       payload: res.data,\n  //     });\n  //     if (res.data.msgText) {\n  //       console.log(\"loginfail1:\", res.data);\n  //       dispatch({\n  //         type: LOGIN_FAIL,\n  //         payload: res.data.msgText,\n  //       });\n  //     } else {\n  //       console.log(\"loginsuccess:\", res.data);\n  //       loadUser();\n  //     }\n  //   } catch (err) {\n  //     console.log(\"loginerror:\", err);\n  //     dispatch({\n  //       type: LOGIN_FAIL,\n  //       payload: err.response.data.msgText,\n  //     });\n  //   }\n  // };\n  // Login User\n  // const GetAllUserForSpecificGroup = async (groupId) => {\n  //   setAuthToken(localStorage.token);\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   };\n  //   try {\n  //     const res = await axios.get(\n  //       SERVER_URL + \"/GetAllUsersForThisGroup/\" + groupId,\n  //       config\n  //     );\n  //     //console.log(\"allusers:\", res.data);\n  //     dispatch({\n  //       type: GET_ALL_USER_FOR_SPECIFIC_GROUP_SUCCESS,\n  //       payload: res.data,\n  //     });\n  //   } catch (err) {\n  //     //console.log(\"loginerror:\", err);\n  //     dispatch({\n  //       type: GET_ALL_USER_FOR_SPECIFIC_GROUP_FAIL,\n  //       payload: err.response.data.msgText,\n  //     });\n  //   }\n  // };\n  // const GetUserInfoById = async (userId) => {\n  //   setAuthToken(localStorage.token);\n  //   const config = {\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   };\n  //   try {\n  //     const res = await axios.get(\n  //       SERVER_URL + \"/GetUserInfoById/\" + userId,\n  //       config\n  //     );\n  //     //console.log(\"allusers:\", res.data);\n  //     dispatch({\n  //       type: GET_USER_INFO_BY_ID_SUCCESS,\n  //       payload: res.data,\n  //     });\n  //   } catch (err) {\n  //     dispatch({\n  //       type: GET_USER_INFO_BY_ID_FAIL,\n  //       payload: err.response.data.msgText,\n  //     });\n  //   }\n  // };\n  // Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      // firstStepId: state.firstStepId,\n      // verifyNum: state.verifyNum,\n      // allUserForSpecificGroupData: state.allUserForSpecificGroupData,\n      // userInfoByIdData: state.userInfoByIdData,\n      //register,\n      loadUser,\n      //loadUser2,\n      //firstStepOfRegister,\n      login,\n      logout,\n      clearErrors //firstStep,\n      // GetAllUserForSpecificGroup,\n      // GetUserInfoById,\n\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["React","useReducer","AuthContext","authReducer","setAuthToken","axios","SERVER_URL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","SET_AUTH_HEADER","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","verifyNum","firstStepId","loading","user","error","allUserForSpecificGroupData","userInfoByIdData","state","dispatch","loadUser","console","log","res","get","data","type","payload","err","setAuthHeader","DATA","login","formData","config","headers","post","response","logout","clearErrors","children"],"sources":["/Users/samsamaei/Documents/Projects/falcon/src/Context/Auth/authState.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport authReducer from \"./AuthReducer\";\r\nimport setAuthToken from \"../../Components/Tools/setAuthToken\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"../constant\";\r\nimport {\r\n  // REGISTER_SUCCESS,\r\n  // REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  // FIRST_STEP_REGISTER_FAIL,\r\n  // FIRST_STEP_REGISTER_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  SET_AUTH_HEADER,\r\n  LOGIN_FAIL,\r\n  // FIRST_STEP,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  // GET_ALL_USER_FOR_SPECIFIC_GROUP_SUCCESS,\r\n  // GET_ALL_USER_FOR_SPECIFIC_GROUP_FAIL,\r\n  // GET_USER_INFO_BY_ID_SUCCESS,\r\n  // GET_USER_INFO_BY_ID_FAIL,\r\n} from \"../types\";\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    verifyNum: null,\r\n    firstStepId: null,\r\n    loading: false,\r\n    user: null,\r\n    error: null,\r\n    allUserForSpecificGroupData: null,\r\n    userInfoByIdData: null,\r\n    token: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    console.log(\r\n      \"t11\",\r\n      // localStorage.getItem(\"token\"),\r\n      localStorage.token\r\n      // localStorage[\"token\"]\r\n    );\r\n    // setTimeout(async () => {\r\n    //   console.log(\"\");\r\n    // }, 10);\r\n    await setAuthToken(localStorage.token);\r\n    try {\r\n      const res = await axios.get(SERVER_URL + \"/auth\");\r\n      console.log(\"auth data res\", res.data);\r\n      await dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({ type: AUTH_ERROR });\r\n    }\r\n  };\r\n  // const loadUser = async () => {\r\n  //   setAuthToken(localStorage.token);\r\n\r\n  //   try {\r\n  //     const res = await axios.get(SERVER_URL + \"/auth\");\r\n  //     //console.log(\"auth data res\", res.data);\r\n  //     await dispatch({\r\n  //       type: USER_LOADED,\r\n  //       payload: res.data,\r\n  //     });\r\n  //   } catch (err) {\r\n  //     dispatch({ type: AUTH_ERROR });\r\n  //   }\r\n  // };\r\n  const setAuthHeader = async (DATA) => {\r\n    await dispatch({\r\n      type: SET_AUTH_HEADER,\r\n      payload: DATA,\r\n    });\r\n  };\r\n  // // FIRST_STEP\r\n  // const firstStep = (id) => {\r\n  //   dispatch({\r\n  //     type: FIRST_STEP,\r\n  //     payload: id,\r\n  //   });\r\n  // };\r\n\r\n  // // Register User\r\n  // const register = async (formData) => {\r\n  //   const config = {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //   };\r\n\r\n  //   try {\r\n  //     const res = await axios.post(\r\n  //       SERVER_URL + \"/CreatTokenByIdAndVerifyNum\",\r\n  //       formData,\r\n  //       config\r\n  //     );\r\n  //     ////console.log('register data:', res.data);\r\n  //     dispatch({\r\n  //       type: REGISTER_SUCCESS,\r\n  //       payload: res.data,\r\n  //     });\r\n\r\n  //     loadUser();\r\n  //   } catch (err) {\r\n  //     dispatch({\r\n  //       type: REGISTER_FAIL,\r\n  //       payload: err.response.data.msgText,\r\n  //     });\r\n  //   }\r\n  // };\r\n  // // first Step Register\r\n  // const firstStepOfRegister = async (formData) => {\r\n  //   const config = {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //   };\r\n\r\n  //   try {\r\n  //     const res = await axios.post(\r\n  //       SERVER_URL + \"/createItemInUser\",\r\n  //       formData,\r\n  //       config\r\n  //     );\r\n  //     //.then(async (data)=>{\r\n\r\n  //     //console.log(\"firstStep\", res.data);\r\n  //     firstStep(res.data.user.id);\r\n\r\n  //     dispatch({\r\n  //       type: FIRST_STEP_REGISTER_SUCCESS,\r\n  //       payload: res.data,\r\n  //     });\r\n  //     const { nationalID, passWord } = formData;\r\n  //     login({ nationalID: nationalID, password: passWord });\r\n  //     //console.log(\"formData:\", formData);\r\n  //     // })\r\n  //   } catch (err) {\r\n  //     ////console.log('firstStep err:', err.response.data.msgText);\r\n  //     let error = err;\r\n  //     await dispatch({\r\n  //       type: FIRST_STEP_REGISTER_FAIL,\r\n  //       payload: err.response.data,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // Login User\r\n  // Login User\r\n  const login = async (formData) => {\r\n    // setAuthToken(localStorage.token);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(SERVER_URL + \"/login\", formData, config);\r\n      // console.log(\"login:\", res.data);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      await loadUser();\r\n      loadUser();\r\n    } catch (err) {\r\n      console.log(\"loginerror:\", err);\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: err.response,\r\n      });\r\n    }\r\n  };\r\n  // const login = async (formData) => {\r\n  //   const config = {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //   };\r\n\r\n  //   try {\r\n  //     const res = await axios.post(SERVER_URL + \"/login\", formData, config);\r\n  //     ////console.log('login:', res.data);\r\n  //     dispatch({\r\n  //       type: LOGIN_SUCCESS,\r\n  //       payload: res.data,\r\n  //     });\r\n  //     if (res.data.msgText) {\r\n  //       console.log(\"loginfail1:\", res.data);\r\n  //       dispatch({\r\n  //         type: LOGIN_FAIL,\r\n  //         payload: res.data.msgText,\r\n  //       });\r\n  //     } else {\r\n  //       console.log(\"loginsuccess:\", res.data);\r\n  //       loadUser();\r\n  //     }\r\n  //   } catch (err) {\r\n  //     console.log(\"loginerror:\", err);\r\n  //     dispatch({\r\n  //       type: LOGIN_FAIL,\r\n  //       payload: err.response.data.msgText,\r\n  //     });\r\n  //   }\r\n  // };\r\n  // Login User\r\n  // const GetAllUserForSpecificGroup = async (groupId) => {\r\n  //   setAuthToken(localStorage.token);\r\n  //   const config = {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //   };\r\n\r\n  //   try {\r\n  //     const res = await axios.get(\r\n  //       SERVER_URL + \"/GetAllUsersForThisGroup/\" + groupId,\r\n  //       config\r\n  //     );\r\n  //     //console.log(\"allusers:\", res.data);\r\n  //     dispatch({\r\n  //       type: GET_ALL_USER_FOR_SPECIFIC_GROUP_SUCCESS,\r\n  //       payload: res.data,\r\n  //     });\r\n  //   } catch (err) {\r\n  //     //console.log(\"loginerror:\", err);\r\n  //     dispatch({\r\n  //       type: GET_ALL_USER_FOR_SPECIFIC_GROUP_FAIL,\r\n  //       payload: err.response.data.msgText,\r\n  //     });\r\n  //   }\r\n  // };\r\n  // const GetUserInfoById = async (userId) => {\r\n  //   setAuthToken(localStorage.token);\r\n  //   const config = {\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //   };\r\n\r\n  //   try {\r\n  //     const res = await axios.get(\r\n  //       SERVER_URL + \"/GetUserInfoById/\" + userId,\r\n  //       config\r\n  //     );\r\n  //     //console.log(\"allusers:\", res.data);\r\n  //     dispatch({\r\n  //       type: GET_USER_INFO_BY_ID_SUCCESS,\r\n  //       payload: res.data,\r\n  //     });\r\n  //   } catch (err) {\r\n  //     dispatch({\r\n  //       type: GET_USER_INFO_BY_ID_FAIL,\r\n  //       payload: err.response.data.msgText,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  // Logout\r\n  const logout = () => dispatch({ type: LOGOUT });\r\n\r\n  // Clear Errors\r\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n        // firstStepId: state.firstStepId,\r\n        // verifyNum: state.verifyNum,\r\n        // allUserForSpecificGroupData: state.allUserForSpecificGroupData,\r\n        // userInfoByIdData: state.userInfoByIdData,\r\n        //register,\r\n        loadUser,\r\n        //loadUser2,\r\n        //firstStepOfRegister,\r\n        login,\r\n        logout,\r\n        clearErrors,\r\n        //firstStep,\r\n        // GetAllUserForSpecificGroup,\r\n        // GetUserInfoById,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SACE;AACA;AACAC,WAHF,EAIEC,UAJF,EAKE;AACA;AACAC,aAPF,EAQEC,eARF,EASEC,UATF,EAUE;AACAC,MAXF,EAYEC,YAZF,CAaE;AACA;AACA;AACA;AAhBF,OAiBO,UAjBP;;;AAmBA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,YAAY,GAAG;IACnBC,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;IAEnBC,eAAe,EAAE,IAFE;IAGnBC,SAAS,EAAE,IAHQ;IAInBC,WAAW,EAAE,IAJM;IAKnBC,OAAO,EAAE,KALU;IAMnBC,IAAI,EAAE,IANa;IAOnBC,KAAK,EAAE,IAPY;IAQnBC,2BAA2B,EAAE,IARV;IASnBC,gBAAgB,EAAE,IATC;IAUnBV,KAAK,EAAE;EAVY,CAArB;EAaA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoB5B,UAAU,CAACE,WAAD,EAAca,YAAd,CAApC,CAd2B,CAgB3B;;EACA,MAAMc,QAAQ,GAAG,YAAY;IAC3BC,OAAO,CAACC,GAAR,CACE,KADF,EAEE;IACAd,YAAY,CAACD,KAHf,CAIE;IAJF,EAD2B,CAO3B;IACA;IACA;;IACA,MAAMb,YAAY,CAACc,YAAY,CAACD,KAAd,CAAlB;;IACA,IAAI;MACF,MAAMgB,GAAG,GAAG,MAAM5B,KAAK,CAAC6B,GAAN,CAAU5B,UAAU,GAAG,OAAvB,CAAlB;MACAyB,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,GAAG,CAACE,IAAjC;MACA,MAAMN,QAAQ,CAAC;QACbO,IAAI,EAAE7B,WADO;QAEb8B,OAAO,EAAEJ,GAAG,CAACE;MAFA,CAAD,CAAd;IAID,CAPD,CAOE,OAAOG,GAAP,EAAY;MACZT,QAAQ,CAAC;QAAEO,IAAI,EAAE5B;MAAR,CAAD,CAAR;IACD;EACF,CArBD,CAjB2B,CAuC3B;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACA,MAAM+B,aAAa,GAAG,MAAOC,IAAP,IAAgB;IACpC,MAAMX,QAAQ,CAAC;MACbO,IAAI,EAAE1B,eADO;MAEb2B,OAAO,EAAEG;IAFI,CAAD,CAAd;EAID,CALD,CArD2B,CA2D3B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;;EACA,MAAMC,KAAK,GAAG,MAAOC,QAAP,IAAoB;IAChC;IACA,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;;IAMA,IAAI;MACF,MAAMX,GAAG,GAAG,MAAM5B,KAAK,CAACwC,IAAN,CAAWvC,UAAU,GAAG,QAAxB,EAAkCoC,QAAlC,EAA4CC,MAA5C,CAAlB,CADE,CAEF;;MACAd,QAAQ,CAAC;QACPO,IAAI,EAAE3B,aADC;QAEP4B,OAAO,EAAEJ,GAAG,CAACE;MAFN,CAAD,CAAR;MAIA,MAAML,QAAQ,EAAd;MACAA,QAAQ;IACT,CATD,CASE,OAAOQ,GAAP,EAAY;MACZP,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,GAA3B;MACAT,QAAQ,CAAC;QACPO,IAAI,EAAEzB,UADC;QAEP0B,OAAO,EAAEC,GAAG,CAACQ;MAFN,CAAD,CAAR;IAID;EACF,CAxBD,CAtI2B,CA+J3B;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;;EACA,MAAMC,MAAM,GAAG,MAAMlB,QAAQ,CAAC;IAAEO,IAAI,EAAExB;EAAR,CAAD,CAA7B,CArP2B,CAuP3B;;;EACA,MAAMoC,WAAW,GAAG,MAAMnB,QAAQ,CAAC;IAAEO,IAAI,EAAEvB;EAAR,CAAD,CAAlC;;EAEA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLI,KAAK,EAAEW,KAAK,CAACX,KADR;MAELG,eAAe,EAAEQ,KAAK,CAACR,eAFlB;MAGLG,OAAO,EAAEK,KAAK,CAACL,OAHV;MAILC,IAAI,EAAEI,KAAK,CAACJ,IAJP;MAKLC,KAAK,EAAEG,KAAK,CAACH,KALR;MAML;MACA;MACA;MACA;MACA;MACAK,QAXK;MAYL;MACA;MACAW,KAdK;MAeLM,MAfK;MAgBLC,WAhBK,CAiBL;MACA;MACA;;IAnBK,CADT;IAAA,UAuBGjC,KAAK,CAACkC;EAvBT;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CArRD;;GAAMnC,S;;KAAAA,S;AAuRN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}