{"ast":null,"code":"import _objectSpread from\"/Users/samsamaei/Documents/Projects/falcon/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/* eslint-disable import/no-anonymous-default-export */import{CREATE_ITEM_IN_USER_SUCCESS,CREATE_ITEM_IN_USER_FAIL,GET_USER_BY_ID_SUCCESS,GET_USER_BY_ID_FAIL,LOGEDDIN_USER_SUCCESS,LOGEDDIN_USER_FAIL,REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_ERRORS,SET_POPUP,GET_COUNTRIES_FAIL,GET_COUNTRIES_SUCCESS,UPDATE_VERIFICATION_SUCCESS,UPDATE_VERIFICATION_FAIL,SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS,SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL,UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS,UPDATE_PASSWORD_SPECIFIC_USER_FAIL,SET_SHOW_GAME_ITEMS_SUCCESS,SET_DISPLAY_RFP_SUCCESS,CREATE_DATA_USER_SUCCESS,CREATE_DATA_USER_FAIL,SET_USERNAMEGAME,GET_GAME_ID_INFO_SUCCESS,GET_GAME_ID_INFO_FAIL,DELETE_GAME_ID_SUCCESS,DELETE_GAME_ID_FAIL,CREATE_TOURNAMENT_SUCCESS,CREATE_TOURNAMENT_FAIL,ACTIVE_TOURNAMENT_SUCCESS,ACTIVE_TOURNAMENT_FAIL,PREVIOUS_TOURNAMENT_FAIL,PREVIOUS_TOURNAMENT_SUCCESS,DELETE_TOURNAMENT_SUCCESS,DELETE_TOURNAMENT_FAIL,CREATE_REGISTER_GAME_SUCCESS,CREATE_REGISTER_GAME_FAIL,GET_REGISTER_USER_TOURNAMENT_SUCCESS,GET_REGISTER_USER_TOURNAMENT_FAIL,START_TOURNAMENT_SUCCESS,START_TOURNAMENT_FAIL,SET_START_TOURNAMENT,SET_REGISTER_TOURNAMENT,SET_CREATE_TOURNAMENT,GET_USER_INFO_SUCCESS,GET_USER_INFO_FAIL,UPDATE_USER_INFO_SUCCESS,UPDATE_USER_INFO_FAIL,SET_USER_SETTING,SET_GAME_ID_DELETED_TOURNAMENT,SET_USER_LOCATIN_TOURNAMENT,UPDATE_USER_LOCATION_SUCCESS,UPDATE_USER_LOCATIONO_FAIL,UPDATE_USER_PASSWORD_SUCCESS,UPDATE_USER_PASSWORD_FAIL,SET_USER_PASSWORD,GET_ALL_USER_FALCON_SUCCESS,GET_ALL_USER_FALCON_FAIL,SET_SWITCH_USERS,SET_PERSONAL_INFO,UPDATE_USERS_BY_ADMIN_SUCCESS,UPDATE_USERS_BY_ADMIN_FAIL,SET_EDIT_USER_SETTING,UPDATE_PASSWORD_BY_ADMIN_SUCCESS,UPDATE_PASSWORD_BY_ADMIN_FAIL,SET_EDIT_USER_PASS_SETTING,GET_TOURNAMENT_BY_ID_SUCCESS,GET_TOURNAMENT_BY_ID_FAIL}from\"./types\";export default(function(state,action){switch(action.type){case GET_TOURNAMENT_BY_ID_SUCCESS:return _objectSpread(_objectSpread({},state),{},{tournamentByIdData:action.payload});case GET_TOURNAMENT_BY_ID_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case UPDATE_PASSWORD_BY_ADMIN_SUCCESS:return _objectSpread(_objectSpread({},state),{},{passwordEditByAdmin:action.payload});case UPDATE_PASSWORD_BY_ADMIN_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case SET_EDIT_USER_PASS_SETTING:return _objectSpread(_objectSpread({},state),{},{passwordEditByAdmin:action.payload});case UPDATE_USERS_BY_ADMIN_SUCCESS:return _objectSpread(_objectSpread({},state),{},{usersEditByAdmin:action.payload});case UPDATE_USERS_BY_ADMIN_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case SET_EDIT_USER_SETTING:return _objectSpread(_objectSpread({},state),{},{usersEditByAdmin:action.payload});case SET_PERSONAL_INFO:return _objectSpread(_objectSpread({},state),{},{personalInfoData:action.payload});case SET_SWITCH_USERS:return _objectSpread(_objectSpread({},state),{},{switchBetweenUserAndPersonalInfo:action.payload});case GET_ALL_USER_FALCON_SUCCESS:return _objectSpread(_objectSpread({},state),{},{allUserFalconData:action.payload});case GET_ALL_USER_FALCON_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case UPDATE_USER_PASSWORD_SUCCESS:return _objectSpread(_objectSpread({},state),{},{updateUserPasswordData:action.payload});case UPDATE_USER_PASSWORD_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case UPDATE_USER_LOCATION_SUCCESS:return _objectSpread(_objectSpread({},state),{},{updateUserLocationData:action.payload});case UPDATE_USER_LOCATIONO_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case UPDATE_USER_INFO_SUCCESS:return _objectSpread(_objectSpread({},state),{},{updateUserData:action.payload});case UPDATE_USER_INFO_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case GET_USER_INFO_SUCCESS:return _objectSpread(_objectSpread({},state),{},{userInfoData:action.payload});case GET_USER_INFO_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case SET_USER_PASSWORD:return _objectSpread(_objectSpread({},state),{},{updateUserPasswordData:null});case SET_CREATE_TOURNAMENT:return _objectSpread(_objectSpread({},state),{},{createTournamentData:null});case SET_USER_LOCATIN_TOURNAMENT:return _objectSpread(_objectSpread({},state),{},{updateUserLocationData:null});case SET_GAME_ID_DELETED_TOURNAMENT:return _objectSpread(_objectSpread({},state),{},{deleteGameIdData:null});case SET_USER_SETTING:return _objectSpread(_objectSpread({},state),{},{updateUserData:null});case SET_REGISTER_TOURNAMENT:return _objectSpread(_objectSpread({},state),{},{registerGameUserData:null});case SET_START_TOURNAMENT:return _objectSpread(_objectSpread({},state),{},{startTournmentData:null});case START_TOURNAMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{startTournmentData:action.payload});case START_TOURNAMENT_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case GET_REGISTER_USER_TOURNAMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{registerForThisGameData:action.payload});case GET_REGISTER_USER_TOURNAMENT_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case CREATE_REGISTER_GAME_SUCCESS:return _objectSpread(_objectSpread({},state),{},{registerGameUserData:action.payload});case CREATE_REGISTER_GAME_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case DELETE_TOURNAMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{deletedTournamentData:action.payload});case DELETE_TOURNAMENT_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case PREVIOUS_TOURNAMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{previousTournamentData:action.payload});case PREVIOUS_TOURNAMENT_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case ACTIVE_TOURNAMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{activeTournamentData:action.payload});case ACTIVE_TOURNAMENT_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case CREATE_TOURNAMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{createTournamentData:action.payload});case CREATE_TOURNAMENT_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case SET_USERNAMEGAME:return _objectSpread(_objectSpread({},state),{},{usernameGameData:action.payload});case SET_SHOW_GAME_ITEMS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{ShowGameItem:action.payload});case DELETE_GAME_ID_SUCCESS:return _objectSpread(_objectSpread({},state),{},{deleteGameIdData:action.payload});case DELETE_GAME_ID_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case GET_GAME_ID_INFO_SUCCESS:return _objectSpread(_objectSpread({},state),{},{gameIdInfoData:action.payload});case GET_GAME_ID_INFO_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case SET_DISPLAY_RFP_SUCCESS:return _objectSpread(_objectSpread({},state),{},{createOrUpdateSurveyData:action.payload});case CREATE_DATA_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{checkUserData:action.payload});case CREATE_DATA_USER_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{updatePasswordSpecificUserData:action.payload});case UPDATE_PASSWORD_SPECIFIC_USER_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS:return _objectSpread(_objectSpread({},state),{},{sendEmailForChangePasswordData:action.payload});case SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case UPDATE_VERIFICATION_SUCCESS:return _objectSpread(_objectSpread({},state),{},{updateVerificationData:action.payload});case UPDATE_VERIFICATION_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case GET_COUNTRIES_SUCCESS:return _objectSpread(_objectSpread({},state),{},{countriesData:action.payload});case GET_COUNTRIES_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case SET_POPUP:return _objectSpread(_objectSpread({},state),{},{popupAlertData:action.payload,createdItemInUserData:null});case LOGEDDIN_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{logedinUserData:action.payload});case LOGEDDIN_USER_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case CREATE_ITEM_IN_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{createdItemInUserData:action.payload});case CREATE_ITEM_IN_USER_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});case GET_USER_BY_ID_SUCCESS:return _objectSpread(_objectSpread({},state),{},{userByIdData:action.payload});case GET_USER_BY_ID_FAIL:return _objectSpread(_objectSpread({},state),{},{err:action.payload});//authentication and authorization\ncase USER_LOADED:localStorage.isAuthenticated=true;localStorage.loading=false;localStorage.user=JSON.stringify(action.payload);return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,loading:false,user:action.payload});case REGISTER_SUCCESS:case LOGIN_SUCCESS://localStorage.setItem(`token`, `'` + action.payload.token + `'`);\nlocalStorage.accessToken=action.payload.accessToken;localStorage.refreshToken=action.payload.refreshToken;localStorage.isAuthenticated=true;localStorage.loading=false;return _objectSpread(_objectSpread(_objectSpread({},state),action.payload),{},{isAuthenticated:true,loading:false//token: action.payload.token,\n});case REGISTER_FAIL:case AUTH_ERROR:case LOGIN_FAIL:case LOGOUT:localStorage.removeItem(\"accessToken\");localStorage.removeItem(\"refreshToken\");localStorage.removeItem(\"isAuthenticated\");localStorage.removeItem(\"loading\");localStorage.removeItem(\"user\");localStorage.removeItem(\"error\");return _objectSpread(_objectSpread({},state),{},{token:null,isAuthenticated:false,loading:false,user:null,err:action.payload});case CLEAR_ERRORS:return _objectSpread(_objectSpread({},state),{},{err:null});default:return state;}});","map":{"version":3,"names":["CREATE_ITEM_IN_USER_SUCCESS","CREATE_ITEM_IN_USER_FAIL","GET_USER_BY_ID_SUCCESS","GET_USER_BY_ID_FAIL","LOGEDDIN_USER_SUCCESS","LOGEDDIN_USER_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","SET_POPUP","GET_COUNTRIES_FAIL","GET_COUNTRIES_SUCCESS","UPDATE_VERIFICATION_SUCCESS","UPDATE_VERIFICATION_FAIL","SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS","SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL","UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS","UPDATE_PASSWORD_SPECIFIC_USER_FAIL","SET_SHOW_GAME_ITEMS_SUCCESS","SET_DISPLAY_RFP_SUCCESS","CREATE_DATA_USER_SUCCESS","CREATE_DATA_USER_FAIL","SET_USERNAMEGAME","GET_GAME_ID_INFO_SUCCESS","GET_GAME_ID_INFO_FAIL","DELETE_GAME_ID_SUCCESS","DELETE_GAME_ID_FAIL","CREATE_TOURNAMENT_SUCCESS","CREATE_TOURNAMENT_FAIL","ACTIVE_TOURNAMENT_SUCCESS","ACTIVE_TOURNAMENT_FAIL","PREVIOUS_TOURNAMENT_FAIL","PREVIOUS_TOURNAMENT_SUCCESS","DELETE_TOURNAMENT_SUCCESS","DELETE_TOURNAMENT_FAIL","CREATE_REGISTER_GAME_SUCCESS","CREATE_REGISTER_GAME_FAIL","GET_REGISTER_USER_TOURNAMENT_SUCCESS","GET_REGISTER_USER_TOURNAMENT_FAIL","START_TOURNAMENT_SUCCESS","START_TOURNAMENT_FAIL","SET_START_TOURNAMENT","SET_REGISTER_TOURNAMENT","SET_CREATE_TOURNAMENT","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAIL","UPDATE_USER_INFO_SUCCESS","UPDATE_USER_INFO_FAIL","SET_USER_SETTING","SET_GAME_ID_DELETED_TOURNAMENT","SET_USER_LOCATIN_TOURNAMENT","UPDATE_USER_LOCATION_SUCCESS","UPDATE_USER_LOCATIONO_FAIL","UPDATE_USER_PASSWORD_SUCCESS","UPDATE_USER_PASSWORD_FAIL","SET_USER_PASSWORD","GET_ALL_USER_FALCON_SUCCESS","GET_ALL_USER_FALCON_FAIL","SET_SWITCH_USERS","SET_PERSONAL_INFO","UPDATE_USERS_BY_ADMIN_SUCCESS","UPDATE_USERS_BY_ADMIN_FAIL","SET_EDIT_USER_SETTING","UPDATE_PASSWORD_BY_ADMIN_SUCCESS","UPDATE_PASSWORD_BY_ADMIN_FAIL","SET_EDIT_USER_PASS_SETTING","GET_TOURNAMENT_BY_ID_SUCCESS","GET_TOURNAMENT_BY_ID_FAIL","state","action","type","tournamentByIdData","payload","err","passwordEditByAdmin","usersEditByAdmin","personalInfoData","switchBetweenUserAndPersonalInfo","allUserFalconData","updateUserPasswordData","updateUserLocationData","updateUserData","userInfoData","createTournamentData","deleteGameIdData","registerGameUserData","startTournmentData","registerForThisGameData","deletedTournamentData","previousTournamentData","activeTournamentData","usernameGameData","ShowGameItem","gameIdInfoData","createOrUpdateSurveyData","checkUserData","updatePasswordSpecificUserData","sendEmailForChangePasswordData","updateVerificationData","countriesData","popupAlertData","createdItemInUserData","logedinUserData","userByIdData","localStorage","isAuthenticated","loading","user","JSON","stringify","accessToken","refreshToken","removeItem","token"],"sources":["/Users/samsamaei/Documents/Projects/falcon/src/Context/testReducer.js"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport {\r\n  CREATE_ITEM_IN_USER_SUCCESS,\r\n  CREATE_ITEM_IN_USER_FAIL,\r\n  GET_USER_BY_ID_SUCCESS,\r\n  GET_USER_BY_ID_FAIL,\r\n  LOGEDDIN_USER_SUCCESS,\r\n  LOGEDDIN_USER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  SET_POPUP,\r\n  GET_COUNTRIES_FAIL,\r\n  GET_COUNTRIES_SUCCESS,\r\n  UPDATE_VERIFICATION_SUCCESS,\r\n  UPDATE_VERIFICATION_FAIL,\r\n  SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS,\r\n  SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL,\r\n  UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS,\r\n  UPDATE_PASSWORD_SPECIFIC_USER_FAIL,\r\n  SET_SHOW_GAME_ITEMS_SUCCESS,\r\n  SET_DISPLAY_RFP_SUCCESS,\r\n  CREATE_DATA_USER_SUCCESS,\r\n  CREATE_DATA_USER_FAIL,\r\n  SET_USERNAMEGAME,\r\n  GET_GAME_ID_INFO_SUCCESS,\r\n  GET_GAME_ID_INFO_FAIL,\r\n  DELETE_GAME_ID_SUCCESS,\r\n  DELETE_GAME_ID_FAIL,\r\n  CREATE_TOURNAMENT_SUCCESS,\r\n  CREATE_TOURNAMENT_FAIL,\r\n  ACTIVE_TOURNAMENT_SUCCESS,\r\n  ACTIVE_TOURNAMENT_FAIL,\r\n  PREVIOUS_TOURNAMENT_FAIL,\r\n  PREVIOUS_TOURNAMENT_SUCCESS,\r\n  DELETE_TOURNAMENT_SUCCESS,\r\n  DELETE_TOURNAMENT_FAIL,\r\n  CREATE_REGISTER_GAME_SUCCESS,\r\n  CREATE_REGISTER_GAME_FAIL,\r\n  GET_REGISTER_USER_TOURNAMENT_SUCCESS,\r\n  GET_REGISTER_USER_TOURNAMENT_FAIL,\r\n  START_TOURNAMENT_SUCCESS,\r\n  START_TOURNAMENT_FAIL,\r\n  SET_START_TOURNAMENT,\r\n  SET_REGISTER_TOURNAMENT,\r\n  SET_CREATE_TOURNAMENT,\r\n  GET_USER_INFO_SUCCESS,\r\n  GET_USER_INFO_FAIL,\r\n  UPDATE_USER_INFO_SUCCESS,\r\n  UPDATE_USER_INFO_FAIL,\r\n  SET_USER_SETTING,\r\n  SET_GAME_ID_DELETED_TOURNAMENT,\r\n  SET_USER_LOCATIN_TOURNAMENT,\r\n  UPDATE_USER_LOCATION_SUCCESS,\r\n  UPDATE_USER_LOCATIONO_FAIL,\r\n  UPDATE_USER_PASSWORD_SUCCESS,\r\n  UPDATE_USER_PASSWORD_FAIL,\r\n  SET_USER_PASSWORD,\r\n  GET_ALL_USER_FALCON_SUCCESS,\r\n  GET_ALL_USER_FALCON_FAIL,\r\n  SET_SWITCH_USERS,\r\n  SET_PERSONAL_INFO,\r\n  UPDATE_USERS_BY_ADMIN_SUCCESS,\r\n  UPDATE_USERS_BY_ADMIN_FAIL,\r\n  SET_EDIT_USER_SETTING,\r\n  UPDATE_PASSWORD_BY_ADMIN_SUCCESS,\r\n  UPDATE_PASSWORD_BY_ADMIN_FAIL,\r\n  SET_EDIT_USER_PASS_SETTING,\r\n  GET_TOURNAMENT_BY_ID_SUCCESS,\r\n  GET_TOURNAMENT_BY_ID_FAIL,\r\n} from \"./types\";\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_TOURNAMENT_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tournamentByIdData: action.payload,\r\n      };\r\n    case GET_TOURNAMENT_BY_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_BY_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        passwordEditByAdmin: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_BY_ADMIN_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case SET_EDIT_USER_PASS_SETTING:\r\n      return {\r\n        ...state,\r\n        passwordEditByAdmin: action.payload,\r\n      };\r\n\r\n    case UPDATE_USERS_BY_ADMIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        usersEditByAdmin: action.payload,\r\n      };\r\n    case UPDATE_USERS_BY_ADMIN_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case SET_EDIT_USER_SETTING:\r\n      return {\r\n        ...state,\r\n        usersEditByAdmin: action.payload,\r\n      };\r\n\r\n    case SET_PERSONAL_INFO:\r\n      return {\r\n        ...state,\r\n        personalInfoData: action.payload,\r\n      };\r\n\r\n    case SET_SWITCH_USERS:\r\n      return {\r\n        ...state,\r\n        switchBetweenUserAndPersonalInfo: action.payload,\r\n      };\r\n\r\n    case GET_ALL_USER_FALCON_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allUserFalconData: action.payload,\r\n      };\r\n    case GET_ALL_USER_FALCON_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserPasswordData: action.payload,\r\n      };\r\n    case UPDATE_USER_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_LOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserLocationData: action.payload,\r\n      };\r\n    case UPDATE_USER_LOCATIONO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case UPDATE_USER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateUserData: action.payload,\r\n      };\r\n    case UPDATE_USER_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case GET_USER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userInfoData: action.payload,\r\n      };\r\n    case GET_USER_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case SET_USER_PASSWORD:\r\n      return {\r\n        ...state,\r\n        updateUserPasswordData: null,\r\n      };\r\n\r\n    case SET_CREATE_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        createTournamentData: null,\r\n      };\r\n\r\n    case SET_USER_LOCATIN_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        updateUserLocationData: null,\r\n      };\r\n\r\n    case SET_GAME_ID_DELETED_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        deleteGameIdData: null,\r\n      };\r\n\r\n    case SET_USER_SETTING:\r\n      return {\r\n        ...state,\r\n        updateUserData: null,\r\n      };\r\n\r\n    case SET_REGISTER_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        registerGameUserData: null,\r\n      };\r\n\r\n    case SET_START_TOURNAMENT:\r\n      return {\r\n        ...state,\r\n        startTournmentData: null,\r\n      };\r\n\r\n    case START_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        startTournmentData: action.payload,\r\n      };\r\n    case START_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case GET_REGISTER_USER_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerForThisGameData: action.payload,\r\n      };\r\n    case GET_REGISTER_USER_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case CREATE_REGISTER_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerGameUserData: action.payload,\r\n      };\r\n    case CREATE_REGISTER_GAME_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case DELETE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        deletedTournamentData: action.payload,\r\n      };\r\n    case DELETE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    case PREVIOUS_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        previousTournamentData: action.payload,\r\n      };\r\n    case PREVIOUS_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case ACTIVE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        activeTournamentData: action.payload,\r\n      };\r\n    case ACTIVE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case CREATE_TOURNAMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createTournamentData: action.payload,\r\n      };\r\n    case CREATE_TOURNAMENT_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_USERNAMEGAME:\r\n      return {\r\n        ...state,\r\n        usernameGameData: action.payload,\r\n      };\r\n    case SET_SHOW_GAME_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ShowGameItem: action.payload,\r\n      };\r\n    case DELETE_GAME_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        deleteGameIdData: action.payload,\r\n      };\r\n    case DELETE_GAME_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_GAME_ID_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        gameIdInfoData: action.payload,\r\n      };\r\n    case GET_GAME_ID_INFO_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_DISPLAY_RFP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createOrUpdateSurveyData: action.payload,\r\n      };\r\n\r\n    case CREATE_DATA_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        checkUserData: action.payload,\r\n      };\r\n    case CREATE_DATA_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_SPECIFIC_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updatePasswordSpecificUserData: action.payload,\r\n      };\r\n    case UPDATE_PASSWORD_SPECIFIC_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        sendEmailForChangePasswordData: action.payload,\r\n      };\r\n    case SEND_EMAIL_FOR_CHANGE_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case UPDATE_VERIFICATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateVerificationData: action.payload,\r\n      };\r\n    case UPDATE_VERIFICATION_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_COUNTRIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        countriesData: action.payload,\r\n      };\r\n    case GET_COUNTRIES_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case SET_POPUP:\r\n      return {\r\n        ...state,\r\n        popupAlertData: action.payload,\r\n        createdItemInUserData: null,\r\n      };\r\n    case LOGEDDIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logedinUserData: action.payload,\r\n      };\r\n    case LOGEDDIN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case CREATE_ITEM_IN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createdItemInUserData: action.payload,\r\n      };\r\n    case CREATE_ITEM_IN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n    case GET_USER_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userByIdData: action.payload,\r\n      };\r\n    case GET_USER_BY_ID_FAIL:\r\n      return {\r\n        ...state,\r\n        err: action.payload,\r\n      };\r\n\r\n    //authentication and authorization\r\n    case USER_LOADED:\r\n      localStorage.isAuthenticated = true;\r\n      localStorage.loading = false;\r\n      localStorage.user = JSON.stringify(action.payload);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      //localStorage.setItem(`token`, `'` + action.payload.token + `'`);\r\n      localStorage.accessToken = action.payload.accessToken;\r\n      localStorage.refreshToken = action.payload.refreshToken;\r\n      localStorage.isAuthenticated = true;\r\n      localStorage.loading = false;\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        //token: action.payload.token,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"accessToken\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n      localStorage.removeItem(\"isAuthenticated\");\r\n      localStorage.removeItem(\"loading\");\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"error\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        err: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        err: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}